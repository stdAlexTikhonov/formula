{
  "version": 3,
  "sources": [
    "hooks.ts",
    "store/codeSlice.ts",
    "components/Node/styles.ts",
    "Tree.ts",
    "components/UserInput/index.tsx",
    "components/List/styles.ts",
    "components/List/index.tsx",
    "components/Wrapper/mapping.ts",
    "components/Wrapper/styles.ts",
    "components/Wrapper/index.tsx",
    "components/CustomButtons/styles.ts",
    "components/CustomIcon/styles.ts",
    "components/CustomIcon/index.tsx",
    "components/CustomButtons/index.tsx",
    "components/Trigger/index.tsx",
    "components/CustomPopover/index.tsx",
    "components/Drawer/index.tsx",
    "components/Leaf/index.tsx",
    "components/Func/styles.ts",
    "components/Func/ComponentSelector.tsx",
    "components/Func/index.tsx",
    "components/Args/styles.ts",
    "components/Args/index.tsx",
    "components/Node/ComponentSelector.tsx",
    "components/Node/index.tsx",
    "components/VisualBuilder/styles.ts",
    "components/Settings/styles.ts",
    "components/Settings/index.tsx",
    "components/VisualBuilder/index.tsx",
    "data/index.ts",
    "components/TextInput/styles.ts",
    "components/TextInput/index.tsx",
    "components/App/config.txt",
    "components/App/index.tsx",
    "reportWebVitals.ts",
    "store/store.ts",
    "index.tsx"
  ],
  "names": [
    "useAppDispatch",
    "useDispatch",
    "useAppSelector",
    "useSelector",
    "codeSlice",
    "createSlice",
    "name",
    "initialState",
    "value",
    "index",
    "brace",
    "update_tree",
    "data",
    "drawer",
    "text",
    "animation",
    "reducers",
    "setCode",
    "state",
    "action",
    "payload",
    "setData",
    "setCurrentIndex",
    "toggleBrace",
    "updateTree",
    "toggleDrawer",
    "toggleText",
    "toggleAnimation",
    "actions",
    "getCode",
    "code",
    "getCurrentIndex",
    "getBrace",
    "getUpdateTree",
    "getData",
    "getDrawer",
    "getText",
    "getAnimation",
    "useStyles",
    "makeStyles",
    "box",
    "display",
    "alignItems",
    "flexDirection",
    "cursor",
    "borderLeft",
    "borderRight",
    "margin",
    "padding",
    "position",
    "borderRadius",
    "button",
    "block",
    "transition",
    "block_transform",
    "transform",
    "node",
    "node_transform",
    "btn",
    "top",
    "right",
    "icon",
    "fontSize",
    "TreeNode",
    "node_type",
    "left",
    "args",
    "arbitrary_args",
    "user_input",
    "expected_type",
    "type",
    "type_error",
    "this",
    "arguments_types",
    "i",
    "quantity",
    "length",
    "count",
    "push",
    "addArguments",
    "root",
    "_find",
    "_delete",
    "find",
    "child",
    "start",
    "traversal",
    "print",
    "toUpperCase",
    "UserInput",
    "setNode",
    "onClose",
    "dispatch",
    "Tree",
    "React",
    "useState",
    "setValue",
    "Box",
    "maxWidth",
    "TextField",
    "autoFocus",
    "style",
    "alignSelf",
    "flexGrow",
    "placeholder",
    "onChange",
    "e",
    "isNaN",
    "parseInt",
    "target",
    "Button",
    "onClick",
    "checkType",
    "theme",
    "createStyles",
    "width",
    "backgroundColor",
    "palette",
    "background",
    "paper",
    "mapping_",
    "n",
    "s",
    "b",
    "d",
    "a",
    "an_mapping_",
    "CustomList",
    "items",
    "index_in_tree",
    "classes",
    "selectedIndex",
    "setSelectedIndex",
    "transformed_list",
    "keys_",
    "setKeys",
    "useEffect",
    "forEach",
    "item",
    "group",
    "Object",
    "keys",
    "className",
    "map",
    "key_",
    "Typography",
    "variant",
    "paddingLeft",
    "Divider",
    "List",
    "component",
    "ind",
    "ListItem",
    "selected",
    "event",
    "stopPropagation",
    "is_operator",
    "setLeft",
    "setArgs",
    "return_type",
    "handleListItemClick",
    "fontStyle",
    "paddingRight",
    "minWidth",
    "orientation",
    "height",
    "marginRight",
    "ListItemText",
    "primary",
    "join",
    "mapping_list_types",
    "Map",
    "set",
    "marginTop",
    "wrapper",
    "overflow",
    "maxHeight",
    "Wrapper",
    "search",
    "setSearch",
    "filtered",
    "setFiltered",
    "filter",
    "includes",
    "label",
    "get",
    "list",
    "fullList",
    "mathIcon",
    "fontFamily",
    "eq",
    "content",
    "ne",
    "gt",
    "gte",
    "lt",
    "lte",
    "plus",
    "mult",
    "or",
    "minus",
    "in",
    "braces",
    "union",
    "divide",
    "CustomIcon",
    "cn",
    "getIcon",
    "CustomButtons",
    "operators",
    "justifyContent",
    "flexWrap",
    "operator",
    "setRight",
    "size",
    "color",
    "parseFloat",
    "toString",
    "Trigger",
    "show_delete",
    "setShowDelete",
    "disableRipple",
    "onMouseEnter",
    "onMouseLeave",
    "IconButton",
    "preventDefault",
    "delete",
    "new_node",
    "swap_with_left",
    "swap_with_right",
    "CustomPopover",
    "anchorEl",
    "setAnchorEl",
    "show",
    "setShow",
    "setType",
    "open",
    "setOpen",
    "handleClose",
    "_type",
    "id",
    "undefined",
    "currentTarget",
    "Popover",
    "anchorOrigin",
    "vertical",
    "horizontal",
    "transformOrigin",
    "ListItemIcon",
    "bgcolor",
    "marginLeft",
    "getComponent",
    "CustomDrawer",
    "setState",
    "key",
    "Drawer",
    "anchor",
    "Leaf",
    "typography",
    "mid",
    "ComponentSelector",
    "Func",
    "handleClick",
    "arg",
    "Args",
    "Node",
    "run_animation",
    "setAnimation",
    "timeout",
    "setTimeout",
    "clearTimeout",
    "inner_box",
    "spacing",
    "checkbox",
    "Settings",
    "Boolean",
    "aria-label",
    "Checkbox",
    "checked",
    "inputProps",
    "VisualBuilder",
    "traversTree",
    "Paper",
    "elevation",
    "DATA",
    "VARIABLES",
    "title",
    "OPERATORS",
    "FUNCTIONS",
    "divider",
    "iconButton",
    "input",
    "flex",
    "TextInput",
    "InputBase",
    "App",
    "fetch",
    "config",
    "then",
    "r",
    "arr",
    "split",
    "row",
    "console",
    "log",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "store",
    "configureStore",
    "reducer",
    "codeReducer",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.73f1afdc.chunk.js",
  "sourcesContent": [
    "import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store/store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n",
    "import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type { RootState } from \"./store\";\r\n\r\ntype Item = {\r\n  name: string;\r\n  arguments_types?: string[];\r\n  return_type?: string;\r\n  type?: string;\r\n  is_operator?: boolean;\r\n  arbitrary_args?: boolean;\r\n  group: string;\r\n};\r\n\r\ninterface CodeSlice {\r\n  value: string;\r\n  index: number;\r\n  brace: boolean;\r\n  update_tree: boolean;\r\n  data: {\r\n    [key: string]: Item[];\r\n  };\r\n  drawer: boolean;\r\n  text: boolean;\r\n  animation: boolean;\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: CodeSlice = {\r\n  value: \"\",\r\n  index: 0,\r\n  brace: false,\r\n  update_tree: false,\r\n  data: {},\r\n  drawer: false,\r\n  text: true,\r\n  animation: false,\r\n};\r\n\r\nexport const codeSlice = createSlice({\r\n  name: \"code\",\r\n  initialState,\r\n  reducers: {\r\n    setCode: (state, action: PayloadAction<string>) => {\r\n      state.value = action.payload;\r\n    },\r\n    setData: (state, action: PayloadAction<any>) => {\r\n      state.data = action.payload;\r\n    },\r\n    setCurrentIndex: (state, action: PayloadAction<number>) => {\r\n      state.index = action.payload;\r\n    },\r\n    toggleBrace: (state) => {\r\n      state.brace = !state.brace;\r\n    },\r\n    updateTree: (state) => {\r\n      state.update_tree = !state.update_tree;\r\n    },\r\n    toggleDrawer: (state) => {\r\n      state.drawer = !state.drawer;\r\n    },\r\n    toggleText: (state) => {\r\n      state.text = !state.text;\r\n    },\r\n    toggleAnimation: (state) => {\r\n      state.animation = !state.animation;\r\n    },\r\n    // incrementByAmount: (state, action: PayloadAction<number>) => {\r\n    //   state.value += action.payload;\r\n    // },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  setCode,\r\n  setCurrentIndex,\r\n  toggleBrace,\r\n  updateTree,\r\n  setData,\r\n  toggleDrawer,\r\n  toggleText,\r\n  toggleAnimation,\r\n} = codeSlice.actions;\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const getCode = (state: RootState) => state.code.value;\r\n\r\nexport const getCurrentIndex = (state: RootState) => state.code.index;\r\n\r\nexport const getBrace = (state: RootState) => state.code.brace;\r\n\r\nexport const getUpdateTree = (state: RootState) => state.code.update_tree;\r\n\r\nexport const getData = (state: RootState) => state.code.data;\r\n\r\nexport const getDrawer = (state: RootState) => state.code.drawer;\r\n\r\nexport const getText = (state: RootState) => state.code.text;\r\n\r\nexport const getAnimation = (state: RootState) => state.code.animation;\r\n\r\nexport default codeSlice.reducer;\r\n",
    "import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles<Theme, { state: boolean; brace: boolean }>({\r\n  box: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: ({ state }) => (state ? \"column\" : \"row\"),\r\n    cursor: \"pointer\",\r\n    borderLeft: ({ brace }) => (brace ? \"2px solid black\" : \"none\"),\r\n    borderRight: ({ brace }) => (brace ? \"2px solid black\" : \"none\"),\r\n    margin: 5,\r\n    padding: 5,\r\n    position: \"relative\",\r\n    borderRadius: 10,\r\n  },\r\n  button: {},\r\n  block: {\r\n    borderRadius: 10,\r\n    transition: \"transform 1s\",\r\n  },\r\n  block_transform: {\r\n    transform: ({ state }) => (state ? \"rotate(-90deg)\" : \"rotate(90deg)\"),\r\n  },\r\n  node: {\r\n    transition: \"transform 1s\",\r\n  },\r\n  node_transform: {\r\n    transform: ({ state }) => (state ? \"rotate(90deg)\" : \"rotate(-90deg)\"),\r\n  },\r\n  btn: {\r\n    position: \"absolute\",\r\n    top: -18,\r\n    right: -12,\r\n  },\r\n  icon: {\r\n    fontSize: 15,\r\n  },\r\n});\r\n",
    "export class TreeNode {\r\n  node_type: string;\r\n  index: number;\r\n  value: string;\r\n  left: TreeNode | null;\r\n  right: TreeNode | null;\r\n  args: TreeNode[];\r\n  arbitrary_args: boolean;\r\n  user_input: boolean;\r\n  expected_type: string;\r\n  type: string;\r\n  type_error: boolean;\r\n  static count: number = 0;\r\n\r\n  constructor(index: number = 0, node_type: string = \"OPERAND\") {\r\n    this.index = index;\r\n    this.node_type = node_type;\r\n    this.value = \"\";\r\n    this.left = null;\r\n    this.right = null;\r\n    this.args = [];\r\n    this.user_input = false;\r\n    this.arbitrary_args = false;\r\n    this.expected_type = \"any\";\r\n    this.type = \"any\";\r\n    this.type_error = false;\r\n  }\r\n\r\n  setValue(value: string) {\r\n    this.value = value;\r\n  }\r\n\r\n  addArguments(arguments_types?: string[]) {\r\n    let i = 0;\r\n    const quantity = arguments_types ? arguments_types.length : 1;\r\n    while (i < quantity) {\r\n      TreeNode.count++;\r\n      const node = new TreeNode(TreeNode.count);\r\n      node.expected_type = arguments_types\r\n        ? arguments_types[i]\r\n        : this.args[0].type;\r\n      this.args.push(node);\r\n      i++;\r\n    }\r\n  }\r\n\r\n  setLeft(expected_type: string) {\r\n    TreeNode.count++;\r\n    this.left = new TreeNode(TreeNode.count);\r\n    this.left.expected_type = expected_type;\r\n  }\r\n\r\n  setRight(expected_type: string) {\r\n    TreeNode.count++;\r\n    this.right = new TreeNode(TreeNode.count);\r\n    this.right.expected_type = expected_type;\r\n  }\r\n\r\n  setArgs(arbitrary_args: boolean, arguments_types: string[]) {\r\n    TreeNode.count++;\r\n    this.right = new TreeNode(TreeNode.count, \"ARGS\");\r\n    this.right.arbitrary_args = arbitrary_args;\r\n    if (arguments_types) this.right.addArguments(arguments_types);\r\n  }\r\n\r\n  checkType() {\r\n    this.type_error =\r\n      this.expected_type !== \"any\" && this.expected_type !== this.type;\r\n  }\r\n}\r\nclass Tree {\r\n  root: TreeNode = new TreeNode();\r\n\r\n  find(index: number) {\r\n    if (this.root.index === index) {\r\n      return this.root;\r\n    } else if (\r\n      this.root.node_type === \"OPERAND\" ||\r\n      this.root.node_type === \"OPERATOR\"\r\n    )\r\n      return (\r\n        this._find(this.root.left, index) || this._find(this.root.right, index)\r\n      );\r\n    else if (this.root.node_type === \"FUNCTION\")\r\n      return (\r\n        this._find(this.root.args[0], index) ||\r\n        this._find(this.root.args[1], index) ||\r\n        this._find(this.root.args[2], index) ||\r\n        this._find(this.root.args[3], index) ||\r\n        this._find(this.root.args[4], index) ||\r\n        this._find(this.root.args[5], index) ||\r\n        this._find(this.root.args[6], index) ||\r\n        this._find(this.root.args[7], index) ||\r\n        this._find(this.root.args[8], index) ||\r\n        this._find(this.root.args[9], index)\r\n      );\r\n    else return null;\r\n  }\r\n\r\n  _find(node: TreeNode | null, index: number): any {\r\n    if (node) {\r\n      if (node.index === index) return node;\r\n      else if (node.node_type === \"OPERAND\" || node.node_type === \"OPERATOR\")\r\n        return this._find(node.left, index) || this._find(node.right, index);\r\n      else if (node.node_type === \"FUNCTION\" || node.node_type === \"ARGS\")\r\n        return (\r\n          this._find(node.args[0], index) ||\r\n          this._find(node.args[1], index) ||\r\n          this._find(node.args[2], index) ||\r\n          this._find(node.args[3], index) ||\r\n          this._find(node.args[4], index) ||\r\n          this._find(node.args[5], index) ||\r\n          this._find(node.args[6], index) ||\r\n          this._find(node.args[7], index) ||\r\n          this._find(node.args[8], index) ||\r\n          this._find(node.args[9], index)\r\n        );\r\n      else return null;\r\n    }\r\n  }\r\n\r\n  delete(index: number) {\r\n    if (this.root.index === index) this.root = new TreeNode();\r\n    else if (this.root.left && this.root.left.index === index)\r\n      this.root.left = new TreeNode(this.root.left.index);\r\n    else if (this.root.right && this.root.right.index === index)\r\n      this.root.right = new TreeNode(this.root.right.index);\r\n    else if (this.root.node_type === \"FUNCTION\") {\r\n      for (let i = 0; i < this.root.args.length; i++) {\r\n        if (this.root.args[i].index === index)\r\n          this.root.args[i] = new TreeNode(this.root.args[i].index);\r\n      }\r\n      return (\r\n        this._delete(this.root.args[0], index) ||\r\n        this._delete(this.root.args[1], index) ||\r\n        this._delete(this.root.args[2], index) ||\r\n        this._delete(this.root.args[3], index) ||\r\n        this._delete(this.root.args[4], index) ||\r\n        this._delete(this.root.args[5], index) ||\r\n        this._delete(this.root.args[6], index) ||\r\n        this._delete(this.root.args[7], index) ||\r\n        this._delete(this.root.args[8], index) ||\r\n        this._delete(this.root.args[9], index)\r\n      );\r\n    } else\r\n      return (\r\n        this._delete(this.root.left, index) ||\r\n        this._delete(this.root.right, index)\r\n      );\r\n  }\r\n\r\n  _delete(node: TreeNode | null, index: number): any {\r\n    if (node) {\r\n      if (node.index === index) node = new TreeNode(node.index);\r\n      else if (node.left && node.left.index === index)\r\n        node.left = new TreeNode(node.left.index);\r\n      else if (node.right && node.right.index === index)\r\n        node.right = new TreeNode(node.right.index);\r\n      else if (node.node_type === \"FUNCTION\" || node.node_type === \"ARGS\") {\r\n        for (let i = 0; i < node.args.length; i++) {\r\n          if (node.args[i].index === index)\r\n            node.args[i] = new TreeNode(node.args[i].index);\r\n        }\r\n        return (\r\n          this._delete(node.args[0], index) ||\r\n          this._delete(node.args[1], index) ||\r\n          this._delete(node.args[2], index) ||\r\n          this._delete(node.args[3], index) ||\r\n          this._delete(node.args[4], index) ||\r\n          this._delete(node.args[5], index) ||\r\n          this._delete(node.args[6], index) ||\r\n          this._delete(node.args[7], index) ||\r\n          this._delete(node.args[8], index) ||\r\n          this._delete(node.args[9], index)\r\n        );\r\n      } else\r\n        return (\r\n          this._delete(node.left, index) || this._delete(node.right, index)\r\n        );\r\n    }\r\n  }\r\n\r\n  swap_with_left(index: number) {\r\n    const node = this.find(index);\r\n    const child = node.left;\r\n    if (node) {\r\n      if (\r\n        node.node_type !== \"OPERATOR\" ||\r\n        child.node_type !== \"OPERATOR\" ||\r\n        child.value === \"in\"\r\n      )\r\n        return false;\r\n      else {\r\n        [node.value, child.value] = [child.value, node.value];\r\n        [node.type, child.type] = [child.type, node.type];\r\n        [node.expected_type, child.expected_type] = [\r\n          child.expected_type,\r\n          node.expected_type,\r\n        ];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  swap_with_right(index: number) {\r\n    const node = this.find(index);\r\n    const child = node.right;\r\n    if (node) {\r\n      if (\r\n        node.node_type !== \"OPERATOR\" ||\r\n        child.node_type !== \"OPERATOR\" ||\r\n        child.value === \"in\"\r\n      )\r\n        return false;\r\n      else {\r\n        [node.value, child.value] = [child.value, node.value];\r\n        [node.type, child.type] = [child.type, node.type];\r\n        [node.expected_type, child.expected_type] = [\r\n          child.expected_type,\r\n          node.expected_type,\r\n        ];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  print(start: TreeNode, traversal: string = \"\") {\r\n    if (start) {\r\n      if (start.node_type === \"OPERATOR\") {\r\n        traversal += \"(\";\r\n\r\n        traversal = this.print(start.left!, traversal);\r\n\r\n        traversal += \" \";\r\n\r\n        traversal += start.value.toUpperCase();\r\n\r\n        traversal += \" \";\r\n\r\n        traversal = this.print(start.right!, traversal);\r\n\r\n        traversal += \")\";\r\n      }\r\n\r\n      if (start.node_type === \"FUNCTION\" || start.node_type === \"ARGS\") {\r\n        traversal += start.value.toUpperCase() + \"(\";\r\n\r\n        if (start.args[0])\r\n          traversal = this.print(start.args[0], traversal) + \", \";\r\n        if (start.args[1])\r\n          traversal = this.print(start.args[1], traversal) + \", \";\r\n        if (start.args[2])\r\n          traversal = this.print(start.args[2], traversal) + \", \";\r\n        if (start.args[3])\r\n          traversal = this.print(start.args[3], traversal) + \", \";\r\n        if (start.args[4])\r\n          traversal = this.print(start.args[4], traversal) + \", \";\r\n        if (start.args[5])\r\n          traversal = this.print(start.args[5], traversal) + \", \";\r\n        if (start.args[6])\r\n          traversal = this.print(start.args[6], traversal) + \", \";\r\n        if (start.args[7])\r\n          traversal = this.print(start.args[7], traversal) + \", \";\r\n        if (start.args[8])\r\n          traversal = this.print(start.args[8], traversal) + \", \";\r\n        if (start.args[9]) traversal = this.print(start.args[9], traversal);\r\n\r\n        traversal += \")\";\r\n      }\r\n\r\n      if (start.node_type === \"OPERAND\") {\r\n        if (start.type === \"string\" && start.user_input) traversal += ' \"';\r\n        else traversal += \" \";\r\n\r\n        traversal += start.value;\r\n\r\n        if (start.type === \"string\" && start.user_input) traversal += '\" ';\r\n        else traversal += \" \";\r\n      }\r\n    }\r\n    return traversal;\r\n  }\r\n}\r\n\r\nexport default new Tree();\r\n",
    "import { TextField, Button, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { updateTree, getCurrentIndex, setCode } from \"../../store/codeSlice\";\r\nimport Tree from \"../../Tree\";\r\n\r\ntype Props = {\r\n  setNode: any;\r\n  onClose?: (e: any) => void;\r\n};\r\n\r\nexport const UserInput: React.FC<Props> = ({ setNode, onClose }) => {\r\n  const dispatch = useAppDispatch();\r\n  const index = useAppSelector(getCurrentIndex);\r\n  const node = Tree.find(index);\r\n  const [value, setValue] = React.useState(node.user_input ? node.value : \"\");\r\n\r\n  const handleClick = (e: any) => {\r\n    dispatch(setCode(value));\r\n    node.node_type = \"OPERAND\";\r\n    node.left = null;\r\n    node.right = null;\r\n    node.user_input = true;\r\n    node.type = isNaN(parseInt(value)) ? \"string\" : \"number\";\r\n    node.value = value;\r\n    node.checkType();\r\n    setNode(node);\r\n    dispatch(updateTree());\r\n    if (onClose) onClose(e);\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    node.type = isNaN(parseInt(e.target.value)) ? \"string\" : \"number\";\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" padding={1} maxWidth={\"300px\"}>\r\n      <TextField\r\n        autoFocus\r\n        style={{ alignSelf: \"center\", flexGrow: 1 }}\r\n        placeholder=\"Пользовательский ввод\"\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n      <Button onClick={handleClick}>Ok</Button>\r\n    </Box>\r\n  );\r\n};\r\n",
    "import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  })\r\n);\r\n",
    "import React, { useEffect, useState } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { setCode, getCurrentIndex, updateTree } from \"../../store/codeSlice\";\r\nimport Tree from \"../../Tree\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst mapping_ = {\r\n  n: \"num\",\r\n  s: \"str\",\r\n  b: \"bool\",\r\n  d: \"date\",\r\n  a: \"any\",\r\n};\r\n\r\nconst an_mapping_ = {\r\n  n: \"Числовые\",\r\n  s: \"Строковые\",\r\n  b: \"Логические\",\r\n  d: \"Работа с датами\",\r\n  a: \"Остальные\",\r\n};\r\n\r\ntype Item = {\r\n  name: string;\r\n  type?: string;\r\n  arbitrary_args?: boolean;\r\n  is_operator?: boolean;\r\n  arguments_types?: string[];\r\n  return_type?: string;\r\n  group: string;\r\n};\r\n\r\ntype Props = {\r\n  type: string;\r\n  items: Item[];\r\n};\r\n\r\nexport const CustomList: React.FC<Props> = ({ items, type }) => {\r\n  const dispatch = useAppDispatch();\r\n  const index_in_tree = useAppSelector(getCurrentIndex);\r\n  const classes = useStyles();\r\n  const [selectedIndex, setSelectedIndex] = React.useState(-1);\r\n  const [transformed_list] = useState<any>({});\r\n\r\n  const [keys_, setKeys] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    items.forEach((item: Item) => {\r\n      if (item) {\r\n        if (transformed_list[`${item.group[0]}`])\r\n          transformed_list[`${item.group[0]}`].push(item);\r\n        else transformed_list[`${item.group[0]}`] = [item];\r\n      }\r\n    });\r\n    setKeys(Object.keys(transformed_list));\r\n  }, []);\r\n\r\n  const handleListItemClick = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    index: number,\r\n    value: string\r\n  ) => {\r\n    event.stopPropagation();\r\n    setSelectedIndex(index);\r\n    dispatch(setCode(value));\r\n    const node = Tree.find(index_in_tree);\r\n\r\n    if (node) {\r\n      node.value = value;\r\n      node.node_type = items[index].is_operator\r\n        ? \"OPERATOR\"\r\n        : type === \"functions\"\r\n        ? \"FUNCTION\"\r\n        : \"OPERAND\";\r\n      node.left = null;\r\n      node.right = null;\r\n      node.user_input = false;\r\n\r\n      if (type === \"functions\") {\r\n        if (items[index].is_operator) {\r\n          node.setLeft(items[index].arguments_types![0]);\r\n          node.setArgs(\r\n            items[index].arbitrary_args,\r\n            items[index].arguments_types\r\n          );\r\n        } else {\r\n          node.args = [];\r\n          node.addArguments(items[index].arguments_types);\r\n          node.arbitrary_args = items[index].arbitrary_args;\r\n        }\r\n        node.type = items[index].return_type;\r\n      } else {\r\n        node.type = items[index].type;\r\n      }\r\n      node.checkType();\r\n      dispatch(updateTree());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {keys_.map((key_: string) => {\r\n        return transformed_list[key_ as keyof typeof transformed_list].length >\r\n          0 ? (\r\n          <>\r\n            <Typography variant=\"caption\" style={{ paddingLeft: 15 }}>\r\n              {an_mapping_[key_ as keyof typeof an_mapping_]\r\n                ? an_mapping_[key_ as keyof typeof an_mapping_]\r\n                : transformed_list[key_ as keyof typeof transformed_list][0]\r\n                    .group}\r\n            </Typography>\r\n            <Divider />\r\n            <List component=\"nav\">\r\n              {transformed_list[key_ as keyof typeof transformed_list].map(\r\n                (item: Item, ind: number) => (\r\n                  <ListItem\r\n                    key={ind}\r\n                    button\r\n                    selected={selectedIndex === ind}\r\n                    onClick={(event) =>\r\n                      handleListItemClick(event, ind, item.name)\r\n                    }\r\n                  >\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      style={{\r\n                        fontStyle: \"italic\",\r\n                        paddingRight: 10,\r\n                        minWidth: 30,\r\n                      }}\r\n                    >\r\n                      {mapping_[item.group[0] as keyof typeof mapping_]}\r\n                    </Typography>\r\n                    <Divider\r\n                      orientation=\"vertical\"\r\n                      style={{ height: 28, marginRight: 10 }}\r\n                    />\r\n                    <ListItemText primary={item.name} />\r\n                    {item.arguments_types\r\n                      ? \"(\" + item.arguments_types.join(\",\") + \")\"\r\n                      : \"\"}\r\n                  </ListItem>\r\n                )\r\n              )}\r\n            </List>\r\n          </>\r\n        ) : null;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n",
    "export const mapping_list_types = new Map();\r\nmapping_list_types.set(\"functions\", \"Функции\");\r\nmapping_list_types.set(\"variables\", \"Переменные\");\r\nmapping_list_types.set(\"facts\", \"Факты\");\r\nmapping_list_types.set(\"measures\", \"Меры\");\r\n",
    "import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  text: {\r\n    width: \"90%\",\r\n    margin: 10,\r\n    marginTop: 0,\r\n  },\r\n  wrapper: {\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  box: {\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n    width: \"100%\",\r\n    maxHeight: 300,\r\n  },\r\n}));\r\n",
    "import TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { CustomList } from \"../List\";\r\nimport { mapping_list_types } from \"./mapping\";\r\nimport { useStyles } from \"./styles\";\r\nimport { getData } from \"../../store/codeSlice\";\r\nimport { useAppSelector } from \"../../hooks\";\r\n\r\ntype Item = {\r\n  name: string;\r\n  arbitrary_args?: boolean;\r\n  type?: string;\r\n  arguments_types?: string[];\r\n  group: string;\r\n};\r\n\r\nexport const Wrapper: React.FC<{ type: string }> = ({ type }) => {\r\n  const data = useAppSelector(getData);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filtered, setFiltered] = useState<Item[]>(\r\n    data[type.toUpperCase() as keyof typeof data]\r\n  );\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setFiltered(() =>\r\n      data[type.toUpperCase() as keyof typeof data].filter((item) =>\r\n        item.name.includes(search)\r\n      )\r\n    );\r\n  }, [search]);\r\n\r\n  return (\r\n    <Box className={classes.wrapper}>\r\n      <TextField\r\n        label={mapping_list_types.get(type)}\r\n        className={classes.text}\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      <Box className={classes.box}>\r\n        <CustomList items={filtered} type={type} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n",
    "import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => {\r\n  return {\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: \"auto\",\r\n    },\r\n    btn: {\r\n      margin: 5,\r\n    },\r\n  };\r\n});\r\n",
    "import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  mathIcon: {\r\n    \"&:before\": {\r\n      fontFamily: \"MathIcon\",\r\n    },\r\n  },\r\n  eq: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f122\"',\r\n    },\r\n  },\r\n  ne: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f140\"',\r\n    },\r\n  },\r\n  gt: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f138\"',\r\n    },\r\n  },\r\n  gte: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f137\"',\r\n    },\r\n  },\r\n  lt: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f13a\"',\r\n    },\r\n  },\r\n  lte: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f13b\"',\r\n    },\r\n  },\r\n  plus: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f165\"',\r\n    },\r\n  },\r\n  mult: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f150\"',\r\n    },\r\n  },\r\n  or: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f142\"',\r\n    },\r\n  },\r\n  minus: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f14f\"',\r\n    },\r\n  },\r\n  in: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f134\"',\r\n    },\r\n  },\r\n  braces: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f15e\"',\r\n    },\r\n  },\r\n  union: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f17e\"',\r\n    },\r\n  },\r\n  divide: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f169\"',\r\n    },\r\n  },\r\n}));\r\n",
    "import useStyles from \"./styles\";\r\nimport cn from \"classnames\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\ntype Props = {\r\n  value: string;\r\n};\r\n\r\nexport const CustomIcon: React.FC<Props> = ({ value }) => {\r\n  const classes = useStyles();\r\n  const getIcon = (value: string) => {\r\n    switch (value) {\r\n      case \"+\":\r\n        return <Box className={cn(classes.mathIcon, classes.plus)}></Box>;\r\n      case \"-\":\r\n        return <Box className={cn(classes.mathIcon, classes.minus)}></Box>;\r\n      case \"<\":\r\n        return <Box className={cn(classes.mathIcon, classes.lt)}></Box>;\r\n      case \"<=\":\r\n        return <Box className={cn(classes.mathIcon, classes.lte)}></Box>;\r\n      case \">\":\r\n        return <Box className={cn(classes.mathIcon, classes.gt)}></Box>;\r\n      case \">=\":\r\n        return <Box className={cn(classes.mathIcon, classes.gte)}></Box>;\r\n      case \"!=\":\r\n        return <Box className={cn(classes.mathIcon, classes.ne)}></Box>;\r\n      case \"==\":\r\n        return <Box className={cn(classes.mathIcon, classes.eq)}></Box>;\r\n      case \"*\":\r\n        return <Box className={cn(classes.mathIcon, classes.mult)}></Box>;\r\n      case \"/\":\r\n        return <Box className={cn(classes.mathIcon, classes.divide)}></Box>;\r\n      default:\r\n        return value;\r\n    }\r\n  };\r\n\r\n  return <>{getIcon(value)}</>;\r\n};\r\n",
    "import Box from \"@material-ui/core/Box\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { setCode, updateTree, getData } from \"../../store/codeSlice\";\r\nimport { CustomIcon } from \"../CustomIcon\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const CustomButtons: React.FC<Props> = ({ node }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const data = useAppSelector(getData);\r\n  const operators = data[\"OPERATORS\"];\r\n\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"flex-start\" flexWrap=\"wrap\">\r\n      {operators.map((operator) => (\r\n        <Button\r\n          className={classes.btn}\r\n          onClick={(e: any) => {\r\n            e.stopPropagation();\r\n            dispatch(setCode(operator.name));\r\n            if (node) {\r\n              node.value = operator.name;\r\n              node.node_type = \"OPERATOR\";\r\n              if (node.right && node.right.node_type === \"ARGS\")\r\n                node.right = new TreeNode(node.right.index);\r\n              node.user_input = false;\r\n              node.type = operator.return_type!;\r\n              node.setLeft(operator.arguments_types![0]);\r\n              node.setRight(operator.arguments_types![1]);\r\n            }\r\n            node.checkType();\r\n            dispatch(updateTree());\r\n          }}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        >\r\n          <CustomIcon value={operator.name} />\r\n        </Button>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n",
    "import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport SyncAltIcon from \"@material-ui/icons/SyncAlt\";\r\nimport Tree, { TreeNode } from \"../../Tree\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { updateTree } from \"../../store/codeSlice\";\r\nimport { useState } from \"react\";\r\nimport { CustomIcon } from \"../CustomIcon\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\ntype Props = {\r\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  node: TreeNode;\r\n  setNode: any;\r\n};\r\n\r\ntype UserInputProps = {\r\n  value: string;\r\n  type: string;\r\n};\r\n\r\nconst UserInput: React.FC<UserInputProps> = ({ value, type }) => {\r\n  if (type === \"string\") {\r\n    if (value[0] === '\"') return <Box color=\"brown\">{value}</Box>;\r\n    else return <Box color=\"brown\">\"{value}\"</Box>;\r\n  } else {\r\n    return <CustomIcon value={parseFloat(value).toString()} />;\r\n  }\r\n};\r\n\r\nexport const Trigger: React.FC<Props> = ({ onClick, node, setNode }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [show_delete, setShowDelete] = useState(false);\r\n\r\n  const handleDelete = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Tree.delete(node.index);\r\n    const new_node = Tree.find(node.index);\r\n    setNode(new_node);\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  const handleSwapLeft = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Tree.swap_with_left(node.index);\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  const handleSwapRight = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Tree.swap_with_right(node.index);\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  return node.value ? (\r\n    <Button\r\n      onClick={onClick}\r\n      disableRipple={true}\r\n      style={{ position: \"relative\" }}\r\n      onMouseEnter={() => setShowDelete(true)}\r\n      onMouseLeave={() => setShowDelete(false)}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\">\r\n        {node.type_error && (\r\n          <Typography variant=\"caption\" style={{ color: \"red\", fontSize: 10 }}>\r\n            expected: {node.expected_type}\r\n          </Typography>\r\n        )}\r\n        <Box color={node.type_error ? \"red\" : \"unset\"}>\r\n          {node.user_input ? (\r\n            <UserInput value={node.value} type={node.type} />\r\n          ) : (\r\n            <CustomIcon value={node.value} />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      {show_delete && (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={handleDelete}\r\n          style={{ position: \"absolute\", top: -5, right: -5 }}\r\n        >\r\n          <ClearIcon style={{ fontSize: 15 }} />\r\n        </IconButton>\r\n      )}\r\n      {show_delete && node.left && node.left.node_type === \"OPERATOR\" && (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={handleSwapLeft}\r\n          style={{ position: \"absolute\", top: 7, left: -5 }}\r\n        >\r\n          <SyncAltIcon style={{ fontSize: 15 }} />\r\n        </IconButton>\r\n      )}\r\n      {show_delete && node.right && node.right.node_type === \"OPERATOR\" && (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={handleSwapRight}\r\n          style={{ position: \"absolute\", top: 7, right: -5 }}\r\n        >\r\n          <SyncAltIcon style={{ fontSize: 15 }} />\r\n        </IconButton>\r\n      )}\r\n    </Button>\r\n  ) : (\r\n    <IconButton onClick={onClick}>\r\n      <AddIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n",
    "import React, { useEffect } from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { UserInput } from \"../UserInput\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { Wrapper } from \"../Wrapper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { CustomButtons } from \"../CustomButtons\";\r\nimport Tree, { TreeNode } from \"../../Tree\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { setCurrentIndex, getCode } from \"../../store/codeSlice\";\r\nimport { Trigger } from \"../Trigger\";\r\n\r\nexport const CustomPopover: React.FC<{ index: number }> = ({ index }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n\r\n  const dispatch = useAppDispatch();\r\n  const [node, setNode] = React.useState<TreeNode>(Tree.find(index));\r\n  const [show, setShow] = React.useState<boolean>(false);\r\n  const [type, setType] = React.useState<string | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const code = useAppSelector(getCode);\r\n\r\n  useEffect(() => {\r\n    setNode(Tree.find(index));\r\n  }, [index]);\r\n\r\n  useEffect(() => {\r\n    setAnchorEl(null);\r\n    setOpen(false);\r\n  }, [code]);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen(true);\r\n    dispatch(setCurrentIndex(index));\r\n  };\r\n\r\n  const handleClose = (e: any) => {\r\n    e.stopPropagation();\r\n    setAnchorEl(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListItemClick = (_type: string) => {\r\n    setShow(true);\r\n    setType(_type);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    e.stopPropagation();\r\n    setShow(false);\r\n    setType(null);\r\n  };\r\n\r\n  const getComponent = () => {\r\n    switch (type) {\r\n      case \"functions\":\r\n        return <Wrapper type=\"functions\" />;\r\n      case \"variables\":\r\n        return <Wrapper type=\"variables\" />;\r\n    }\r\n  };\r\n\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Trigger node={node} onClick={handleClick} setNode={setNode} />\r\n      {open && (\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Box position=\"relative\" maxWidth=\"300px\" height=\"400px\">\r\n            <UserInput setNode={setNode} onClose={handleClose} />\r\n            <CustomButtons node={node} />\r\n            <List component=\"nav\">\r\n              <ListItem\r\n                key={0}\r\n                button\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  handleListItemClick(\"variables\");\r\n                }}\r\n              >\r\n                <ListItemText primary={\"Переменные\"} />\r\n                <ListItemIcon style={{ minWidth: 0 }}>\r\n                  <ArrowForwardIosIcon />\r\n                </ListItemIcon>\r\n              </ListItem>\r\n\r\n              <ListItem\r\n                key={3}\r\n                button\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  handleListItemClick(\"functions\");\r\n                }}\r\n              >\r\n                <ListItemText primary={\"Функции\"} />\r\n                <ListItemIcon style={{ minWidth: 0 }}>\r\n                  <ArrowForwardIosIcon />\r\n                </ListItemIcon>\r\n              </ListItem>\r\n            </List>\r\n            {show && (\r\n              <Box\r\n                position=\"absolute\"\r\n                left=\"0px\"\r\n                top=\"0px\"\r\n                width=\"100%\"\r\n                overflow=\"hidden\"\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                height=\"100%\"\r\n                bgcolor=\"white\"\r\n              >\r\n                <IconButton\r\n                  onClick={handleCancel}\r\n                  style={{\r\n                    marginTop: 10,\r\n                    marginLeft: 10,\r\n                    alignSelf: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <ArrowBackIosIcon />\r\n                </IconButton>\r\n                {getComponent()}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Popover>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n",
    "import React, { useEffect } from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Wrapper } from \"../Wrapper\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { setCurrentIndex, getCode } from \"../../store/codeSlice\";\r\nimport Tree from \"../../Tree\";\r\nimport { CustomButtons } from \"../CustomButtons\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { UserInput } from \"../UserInput\";\r\nimport { Trigger } from \"../Trigger\";\r\n\r\nexport const CustomDrawer: React.FC<{\r\n  index: number;\r\n}> = ({ index }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [state, setState] = React.useState(false);\r\n  const [node, setNode] = React.useState(Tree.find(index));\r\n  const code = useAppSelector(getCode);\r\n\r\n  useEffect(() => {\r\n    setState(false);\r\n  }, [code]);\r\n\r\n  const toggleDrawer =\r\n    (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n          (event as React.KeyboardEvent).key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (open) dispatch(setCurrentIndex(index));\r\n      setState(open);\r\n    };\r\n\r\n  const list = () => (\r\n    <Box display=\"flex\">\r\n      <Wrapper type=\"functions\" />\r\n      <Wrapper type=\"variables\" />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Trigger node={node} onClick={toggleDrawer(true)} setNode={setNode} />\r\n      <Drawer anchor={\"bottom\"} open={state} onClose={toggleDrawer(false)}>\r\n        <UserInput setNode={setNode} />\r\n        <CustomButtons node={node} />\r\n        {list()}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n",
    "import { CustomPopover } from \"../CustomPopover\";\r\nimport { CustomDrawer } from \"../Drawer\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { getDrawer } from \"../../store/codeSlice\";\r\n\r\nexport const Leaf: React.FC<{ index: number }> = ({ index }) => {\r\n  const drawer = useAppSelector(getDrawer);\r\n\r\n  return drawer ? (\r\n    <CustomDrawer index={index} />\r\n  ) : (\r\n    <CustomPopover index={index} />\r\n  );\r\n};\r\n",
    "import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles<Theme, { state: boolean }>({\r\n  box: {\r\n    cursor: \"pointer\",\r\n    margin: 5,\r\n    padding: 5,\r\n    borderLeft: ({ state }) => (state ? \"2px solid black\" : \"none\"),\r\n    borderRight: ({ state }) => (state ? \"2px solid black\" : \"none\"),\r\n    flexDirection: ({ state }) => (state ? \"column\" : \"row\"),\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    borderRadius: 10,\r\n  },\r\n  typography: {\r\n    margin: 5,\r\n    fontSize: 25,\r\n  },\r\n  mid: {\r\n    padding: 15,\r\n    fontSize: 25,\r\n  },\r\n});\r\n",
    "import { Func } from \"./\";\r\nimport { Node } from \"../Node\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport { Leaf } from \"../Leaf\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const ComponentSelector: React.FC<Props> = ({ node }) => {\r\n  switch (node.node_type) {\r\n    case \"FUNCTION\":\r\n      return <Func node={node} />;\r\n    case \"OPERATOR\":\r\n      return <Node node={node} />;\r\n    default:\r\n      return <Leaf index={node.index} />;\r\n  }\r\n};\r\n",
    "import { Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport { useState } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { updateTree } from \"../../store/codeSlice\";\r\nimport { Leaf } from \"../Leaf\";\r\nimport { ComponentSelector } from \"./ComponentSelector\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const Func: React.FC<Props> = ({ node }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [state, setState] = useState<boolean>(false);\r\n  const [show, setShow] = useState(false);\r\n  const classes = useStyles({ state });\r\n  const handleClick = (e: any) => {\r\n    e.stopPropagation();\r\n    setState(!state);\r\n  };\r\n\r\n  const handleAddClick = (e: any) => {\r\n    e.stopPropagation();\r\n    node.addArguments();\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      color={node.type_error ? \"red\" : \"unset\"}\r\n      onMouseEnter={() => setShow(true)}\r\n      onMouseLeave={() => setShow(false)}\r\n    >\r\n      <Leaf index={node.index} />\r\n      {!state && <Typography className={classes.typography}>(</Typography>}\r\n      <Box className={classes.box}>\r\n        {node.args &&\r\n          node.args.map((arg: TreeNode, i: number) => {\r\n            return i === node.args.length - 1 ? (\r\n              <ComponentSelector node={arg} />\r\n            ) : (\r\n              <>\r\n                <ComponentSelector node={arg} />\r\n                <Typography className={classes.mid} onClick={handleClick}>\r\n                  ,\r\n                </Typography>\r\n              </>\r\n            );\r\n          })}\r\n        {node.arbitrary_args && show && node.args.length < 10 && (\r\n          <IconButton size=\"small\" onClick={handleAddClick}>\r\n            <AddIcon style={{ fontSize: 15 }} />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n\r\n      {!state && <Typography className={classes.typography}>)</Typography>}\r\n    </Box>\r\n  );\r\n};\r\n",
    "import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles<Theme, { state: boolean }>({\r\n  box: {\r\n    cursor: \"pointer\",\r\n    margin: 5,\r\n    padding: 5,\r\n    borderLeft: ({ state }) => (state ? \"2px solid black\" : \"none\"),\r\n    borderRight: ({ state }) => (state ? \"2px solid black\" : \"none\"),\r\n    flexDirection: ({ state }) => (state ? \"column\" : \"row\"),\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    borderRadius: 10,\r\n  },\r\n  typography: {\r\n    margin: 5,\r\n    fontSize: 25,\r\n  },\r\n  mid: {\r\n    padding: 15,\r\n    fontSize: 25,\r\n  },\r\n});\r\n",
    "import { Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Node } from \"../Node\";\r\nimport { Func } from \"../Func\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport { useState } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { updateTree } from \"../../store/codeSlice\";\r\nimport { Leaf } from \"../Leaf\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const Args: React.FC<Props> = ({ node }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [state, setState] = useState<boolean>(false);\r\n  const [show, setShow] = useState(false);\r\n  const classes = useStyles({ state });\r\n  const handleClick = () => setState(!state);\r\n\r\n  const getComponent = (node: TreeNode) => {\r\n    switch (node.node_type) {\r\n      case \"FUNCTION\":\r\n        return <Func node={node} />;\r\n\r\n      case \"OPERATOR\":\r\n        return <Node node={node} />;\r\n      default:\r\n        return <Leaf index={node.index} />;\r\n    }\r\n  };\r\n\r\n  const handleAddClick = (e: any) => {\r\n    e.stopPropagation();\r\n    node.addArguments();\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      onMouseEnter={() => setShow(true)}\r\n      onMouseLeave={() => setShow(false)}\r\n    >\r\n      {!state && <Typography className={classes.typography}>(</Typography>}\r\n      <Box className={classes.box}>\r\n        {node.args &&\r\n          node.args.map((arg: TreeNode, i: number) => {\r\n            return i === node.args.length - 1 ? (\r\n              getComponent(arg)\r\n            ) : (\r\n              <>\r\n                {getComponent(arg)}\r\n                <Typography className={classes.mid} onClick={handleClick}>\r\n                  ,\r\n                </Typography>\r\n              </>\r\n            );\r\n          })}\r\n        {node.arbitrary_args && show && node.args.length < 10 && (\r\n          <IconButton size=\"small\" onClick={handleAddClick}>\r\n            <AddIcon style={{ fontSize: 15 }} />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n\r\n      {!state && <Typography className={classes.typography}>)</Typography>}\r\n    </Box>\r\n  );\r\n};\r\n",
    "import { Func } from \"../Func\";\r\nimport { Node } from \"./\";\r\nimport { Args } from \"../Args\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport { Leaf } from \"../Leaf\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const ComponentSelector: React.FC<Props> = ({ node }) => {\r\n  switch (node.node_type) {\r\n    case \"FUNCTION\":\r\n      return <Func node={node} />;\r\n    case \"OPERATOR\":\r\n      return <Node node={node} />;\r\n    case \"ARGS\":\r\n      return <Args node={node} />;\r\n    default:\r\n      return <Leaf index={node.index} />;\r\n  }\r\n};\r\n",
    "import { Box } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { getBrace, getAnimation } from \"../../store/codeSlice\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Leaf } from \"../Leaf\";\r\nimport { ComponentSelector } from \"./ComponentSelector\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport cn from \"classnames\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const Node: React.FC<Props> = ({ node }) => {\r\n  const animation = useAppSelector(getAnimation);\r\n  const brace = useAppSelector(getBrace);\r\n  const [state, setState] = useState(false);\r\n  const [run_animation, setAnimation] = useState(false);\r\n\r\n  const classes = useStyles({ state, brace });\r\n\r\n  const handleClick = (e: any) => {\r\n    e.stopPropagation();\r\n    if (animation) {\r\n      setAnimation(true);\r\n      const timeout = setTimeout(() => {\r\n        setState(!state);\r\n        setAnimation(false);\r\n        clearTimeout(timeout);\r\n      }, 1000);\r\n    } else {\r\n      setState(!state);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={handleClick}\r\n      disableRipple={true}\r\n      className={\r\n        animation && run_animation\r\n          ? cn(classes.block, classes.block_transform)\r\n          : classes.button\r\n      }\r\n    >\r\n      <Box className={classes.box} color={node.type_error ? \"red\" : \"unset\"}>\r\n        {node.left && !node.type_error && (\r\n          <Box\r\n            className={\r\n              animation && run_animation\r\n                ? cn(classes.node, classes.node_transform)\r\n                : \"\"\r\n            }\r\n          >\r\n            <ComponentSelector node={node.left} />\r\n          </Box>\r\n        )}\r\n        <Box\r\n          className={\r\n            animation && run_animation\r\n              ? cn(classes.node, classes.node_transform)\r\n              : \"\"\r\n          }\r\n        >\r\n          <Leaf index={node.index} />\r\n        </Box>\r\n\r\n        {node.right && !node.type_error && (\r\n          <Box\r\n            className={\r\n              animation && run_animation\r\n                ? cn(classes.node, classes.node_transform)\r\n                : \"\"\r\n            }\r\n          >\r\n            <ComponentSelector node={node.right} />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Button>\r\n  );\r\n};\r\n",
    "import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  box: {\r\n    width: 1000,\r\n    height: 700,\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    position: \"relative\",\r\n  },\r\n  inner_box: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n",
    "import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    checkbox: {\r\n      padding: 0,\r\n      margin: 0,\r\n      marginRight: 10,\r\n    },\r\n  })\r\n);\r\n",
    "import React from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport {\r\n  getBrace,\r\n  toggleBrace,\r\n  updateTree,\r\n  getAnimation,\r\n  toggleAnimation,\r\n} from \"../../store/codeSlice\";\r\nimport Tree, { TreeNode } from \"../../Tree\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const Settings = () => {\r\n  const brace = useAppSelector(getBrace);\r\n  const animation = useAppSelector(getAnimation);\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    Tree.root = new TreeNode();\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  const handleAnimation = () => dispatch(toggleAnimation());\r\n\r\n  const handleBrace = () => dispatch(toggleBrace());\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Box\r\n      position=\"absolute\"\r\n      right=\"-50px\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <IconButton onClick={handleClick}>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <List component=\"nav\" aria-label=\"settings\">\r\n          <ListItem button onClick={handleBrace}>\r\n            <Checkbox\r\n              checked={brace}\r\n              color=\"primary\"\r\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n              className={classes.checkbox}\r\n            />\r\n            <ListItemText primary=\"Braces\" />\r\n          </ListItem>\r\n          <ListItem button onClick={handleAnimation}>\r\n            <Checkbox\r\n              checked={animation}\r\n              color=\"primary\"\r\n              inputProps={{\r\n                \"aria-label\": \"secondary checkbox\",\r\n              }}\r\n              className={classes.checkbox}\r\n            />\r\n            <ListItemText primary=\"Animation\" />\r\n          </ListItem>\r\n          <ListItem button onClick={handleReset}>\r\n            <Box className={classes.checkbox}>\r\n              <ClearIcon />\r\n            </Box>\r\n            <ListItemText primary=\"Reset\" />\r\n          </ListItem>\r\n        </List>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n};\r\n",
    "import Box from \"@material-ui/core/Box\";\r\nimport { Node } from \"../Node\";\r\nimport { Func } from \"../Func\";\r\nimport Tree, { TreeNode } from \"../../Tree\";\r\nimport { useEffect } from \"react\";\r\nimport { useAppSelector, useAppDispatch } from \"../../hooks\";\r\nimport { getUpdateTree, toggleText } from \"../../store/codeSlice\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Settings } from \"../Settings\";\r\nimport { Leaf } from \"../Leaf\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport const VisualBuilder = () => {\r\n  const update_tree = useAppSelector(getUpdateTree);\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleClick = () => dispatch(toggleText());\r\n\r\n  useEffect(() => {\r\n    traversTree(Tree.root);\r\n  }, [update_tree]);\r\n\r\n  const traversTree = (node: TreeNode) => {\r\n    if (node.node_type === \"OPERAND\") return <Leaf index={node.index} />;\r\n    else if (node.node_type === \"FUNCTION\") return <Func node={node} />;\r\n    else return <Node node={node} />;\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Settings />\r\n      <Paper className={classes.box} elevation={3}>\r\n        <Box className={classes.inner_box}>{traversTree(Tree.root)}</Box>\r\n      </Paper>\r\n      <Button style={{ alignSelf: \"flex-end\" }} onClick={handleClick}>\r\n        Ok\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n",
    "export const DATA = {\r\n  VARIABLES: [\r\n    {\r\n      name: \"DISTANCE\",\r\n      type: \"number\",\r\n      group: \"number\",\r\n      title: \"Formula.Variable.description\",\r\n    },\r\n    {\r\n      name: \"LENGHT\",\r\n      type: \"number\",\r\n      group: \"number\",\r\n      title: \"Formula.Variable.description\",\r\n    },\r\n    {\r\n      name: \"HEIGHT\",\r\n      type: \"number\",\r\n      group: \"number\",\r\n      title: \"Formula.Variable.description\",\r\n    },\r\n    {\r\n      name: \"WEIGHT\",\r\n      type: \"number\",\r\n      group: \"number\",\r\n      title: \"Formula.Variable.description\",\r\n    },\r\n    {\r\n      name: \"LATITUDE\",\r\n      type: \"number\",\r\n      group: \"number\",\r\n      title: \"Formula.Variable.description\",\r\n    },\r\n    {\r\n      name: \"REPLICAS\",\r\n      type: \"number\",\r\n      group: \"number\",\r\n      title: \"Formula.Variable.description\",\r\n    },\r\n    {\r\n      name: \"CODE_GENDER\",\r\n      type: \"string\",\r\n      group: \"string\",\r\n      title: \"Formula.Variable.description\",\r\n    },\r\n    {\r\n      name: \"AMT_ANNUITY\",\r\n      type: \"number\",\r\n      group: \"number\",\r\n      title: \"Formula.Variable.description\",\r\n    },\r\n    {\r\n      name: \"CNT_FAM_MEMBERS\",\r\n      type: \"string\",\r\n      group: \"string\",\r\n      title: \"Formula.Variable.description\",\r\n    },\r\n  ],\r\n  OPERATORS: [\r\n    {\r\n      name: \"and\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"boolean\", \"boolean\"],\r\n    },\r\n    {\r\n      name: \"or\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"boolean\", \"boolean\"],\r\n    },\r\n    {\r\n      name: \"+\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\", \"number\"],\r\n    },\r\n    {\r\n      name: \"-\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\", \"number\"],\r\n    },\r\n    {\r\n      name: \"*\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\", \"number\"],\r\n    },\r\n    {\r\n      name: \"/\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\", \"number\"],\r\n    },\r\n    {\r\n      name: \"<\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \"<=\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \"==\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \"!=\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \">\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \">=\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \"like\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"string\", \"string\"],\r\n    },\r\n    {\r\n      name: \"ilike\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"string\", \"string\"],\r\n    },\r\n    {\r\n      name: \"contains\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"string\", \"string\"],\r\n    },\r\n  ],\r\n  FUNCTIONS: [\r\n    {\r\n      name: \"curent_date\",\r\n      return_type: \"datetime\",\r\n      arguments_types: [],\r\n      group: \"datetime\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"current_time\",\r\n      return_type: \"datetime\",\r\n      arguments_types: [],\r\n      group: \"datetime\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"current_timestamp\",\r\n      return_type: \"number\",\r\n      arguments_types: [],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"now\",\r\n      return_type: \"datetime\",\r\n      arguments_types: [],\r\n      group: \"datetime\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"concat\",\r\n      arbitrary_args: true,\r\n      return_type: \"string\",\r\n      arguments_types: [\"string\"],\r\n      group: \"string\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"cahr_length\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"string\"],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"random\",\r\n      return_type: \"number\",\r\n      arguments_types: [],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"coalesce\",\r\n      arbitrary_args: true,\r\n      return_type: \"any\",\r\n      arguments_types: [\"any\"],\r\n      group: \"any\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"in\",\r\n      is_operator: true,\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\"],\r\n      arbitrary_args: true,\r\n      group: \"boolean\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"between\",\r\n      is_operator: true,\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"number\", \"number\"],\r\n      arbitrary_args: false,\r\n      group: \"boolean\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"not_in\",\r\n      is_operator: true,\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\"],\r\n      arbitrary_args: true,\r\n      group: \"boolean\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"startwith\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"string\"],\r\n      group: \"boolean\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"endwith\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"string\"],\r\n      group: \"boolean\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"not\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"boolean\"],\r\n      group: \"boolean\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"power\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\", \"number\"],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"ln\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"exp\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"sqrt\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"abs\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"ceil\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n    {\r\n      name: \"floor\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n      group: \"number\",\r\n      title: \"Formula.Function.description\",\r\n    },\r\n  ],\r\n};\r\n",
    "import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 800,\r\n    margin: \"auto\",\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n}));\r\n",
    "import { useState, useEffect } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { useAppSelector, useAppDispatch } from \"../../hooks\";\r\nimport { getUpdateTree, toggleText } from \"../../store/codeSlice\";\r\nimport Tree from \"../../Tree\";\r\nimport { useStyles } from \"./styles\";\r\nimport DeviceHubIcon from \"@material-ui/icons/DeviceHub\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nexport const TextInput = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const update_tree = useAppSelector(getUpdateTree);\r\n\r\n  useEffect(() => {\r\n    setValue(Tree.print(Tree.root, \"\"));\r\n  }, [update_tree]);\r\n\r\n  const handleClick = () => dispatch(toggleText());\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Формула\"\r\n        inputProps={{ \"aria-label\": \"formula\" }}\r\n        value={value}\r\n      />\r\n      <Divider className={classes.divider} orientation=\"vertical\" />\r\n      <IconButton\r\n        color=\"primary\"\r\n        className={classes.iconButton}\r\n        aria-label=\"builder\"\r\n        onClick={handleClick}\r\n      >\r\n        <DeviceHubIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n",
    "export default __webpack_public_path__ + \"/formula/static/media/config.ec6b1bbf.txt\";",
    "import { VisualBuilder } from \"../VisualBuilder\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { setData, getText } from \"../../store/codeSlice\";\r\nimport { DATA } from \"../../data\";\r\nimport { TextInput } from \"../TextInput\";\r\nimport config from \"./config.txt\";\r\n\r\nexport const App = () => {\r\n  const text = useAppSelector(getText);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    fetch(config)\r\n      .then((r) => r.text())\r\n      .then((text) => {\r\n        const arr = text.split(\"\\r\\n\").map((row) => row);\r\n        console.log(arr);\r\n      });\r\n    dispatch(setData(DATA));\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      height=\"100vh\"\r\n      width=\"100%\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n    >\r\n      {text ? <TextInput /> : <VisualBuilder />}\r\n    </Box>\r\n  );\r\n};\r\n",
    "import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",
    "import { configureStore } from \"@reduxjs/toolkit\";\r\nimport codeReducer from \"./codeSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    code: codeReducer,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n",
    "import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"
  ],
  "sourceRoot": ""
}
