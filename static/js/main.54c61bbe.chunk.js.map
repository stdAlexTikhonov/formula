{"version":3,"sources":["hooks.ts","store/codeSlice.ts","Tree.ts","components/UserInput/index.tsx","components/List/styles.ts","components/List/index.tsx","components/Wrapper/mapping.ts","components/Wrapper/styles.ts","components/Wrapper/index.tsx","components/CustomButtons/styles.ts","components/CustomIcon/styles.ts","components/CustomIcon/index.tsx","components/CustomButtons/index.tsx","components/CustomPopover/index.tsx","components/Drawer/index.tsx","components/Switcher/index.tsx","components/Leaf/index.tsx","components/Node/styles.ts","components/Func/styles.ts","components/Func/ComponentSelector.tsx","components/Func/index.tsx","components/Args/styles.ts","components/Args/index.tsx","components/Node/ComponentSelector.tsx","components/Node/index.tsx","components/VisualBuilder/styles.ts","components/VisualBuilder/index.tsx","data/index.ts","components/App/index.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","codeSlice","createSlice","name","initialState","value","index","brace","update_tree","data","drawer","text","reducers","setCode","state","action","payload","setData","setCurrentIndex","toggleBrace","updateTree","toggleDrawer","toggleText","actions","getCode","code","getCurrentIndex","getBrace","getUpdateTree","getData","getDrawer","getText","TreeNode","type","left","right","args","arbitrary_args","user_input","this","quantity","count","push","args_len","addArguments","root","_find","node","i","length","_delete","find","child","UserInput","setNode","dispatch","Tree","React","useState","setValue","Box","display","padding","maxWidth","TextField","style","alignSelf","flexGrow","placeholder","onChange","e","target","Button","onClick","useStyles","makeStyles","theme","createStyles","width","backgroundColor","palette","background","paper","CustomList","items","index_in_tree","classes","selectedIndex","setSelectedIndex","className","List","component","map","item","ind","ListItem","button","selected","event","is_operator","setLeft","setArgs","arguments_types","handleListItemClick","ListItemIcon","ListItemText","primary","mapping_list_types","Map","set","margin","marginTop","wrapper","overflow","flexDirection","box","maxHeight","Wrapper","search","setSearch","toUpperCase","filtered","setFiltered","useEffect","filter","includes","label","get","list","fullList","btn","mathIcon","fontFamily","fontSize","eq","content","ne","gt","gte","lt","lte","plus","mult","or","minus","in","braces","union","divide","CustomIcon","cn","getIcon","CustomButtons","operators","justifyContent","flexWrap","operator","setRight","variant","size","CustomPopover","anchorEl","setAnchorEl","show","setShow","show_delete","setShowDelete","setType","open","setOpen","handleClick","currentTarget","_type","id","undefined","disableRipple","position","onMouseEnter","onMouseLeave","isNaN","parseInt","color","IconButton","preventDefault","stopPropagation","delete","top","swap_with_left","swap_with_right","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","minWidth","height","bgcolor","marginLeft","getComponent","TemporaryDrawer","setState","key","Drawer","anchor","Switcher","Leaf","alignItems","cursor","borderLeft","borderRight","borderRadius","mid","icon","typography","ComponentSelector","Func","Typography","arg","Args","Node","visible","setVisible","border","VisualBuilder","traversTree","DATA","VARIABLES","OPERATORS","return_type","FUNCTIONS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","codeReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54c61bbe.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store/store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type { RootState } from \"./store\";\r\n\r\ntype Item = {\r\n  name: string;\r\n  args_quantity: number;\r\n  add_nodes: boolean;\r\n};\r\n\r\ninterface CodeSlice {\r\n  value: string;\r\n  index: number;\r\n  brace: boolean;\r\n  update_tree: boolean;\r\n  data: {\r\n    [key: string]: Item[];\r\n  };\r\n  drawer: boolean;\r\n  text: boolean;\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: CodeSlice = {\r\n  value: \"\",\r\n  index: 0,\r\n  brace: false,\r\n  update_tree: false,\r\n  data: {},\r\n  drawer: false,\r\n  text: false,\r\n};\r\n\r\nexport const codeSlice = createSlice({\r\n  name: \"code\",\r\n  initialState,\r\n  reducers: {\r\n    setCode: (state, action: PayloadAction<string>) => {\r\n      state.value = action.payload;\r\n    },\r\n    setData: (state, action: PayloadAction<any>) => {\r\n      state.data = action.payload;\r\n    },\r\n    setCurrentIndex: (state, action: PayloadAction<number>) => {\r\n      state.index = action.payload;\r\n    },\r\n    toggleBrace: (state) => {\r\n      state.brace = !state.brace;\r\n    },\r\n    updateTree: (state) => {\r\n      state.update_tree = !state.update_tree;\r\n    },\r\n    toggleDrawer: (state) => {\r\n      state.drawer = !state.drawer;\r\n    },\r\n    toggleText: (state) => {\r\n      state.text = !state.text;\r\n    },\r\n    // incrementByAmount: (state, action: PayloadAction<number>) => {\r\n    //   state.value += action.payload;\r\n    // },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  setCode,\r\n  setCurrentIndex,\r\n  toggleBrace,\r\n  updateTree,\r\n  setData,\r\n  toggleDrawer,\r\n  toggleText,\r\n} = codeSlice.actions;\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const getCode = (state: RootState) => state.code.value;\r\n\r\nexport const getCurrentIndex = (state: RootState) => state.code.index;\r\n\r\nexport const getBrace = (state: RootState) => state.code.brace;\r\n\r\nexport const getUpdateTree = (state: RootState) => state.code.update_tree;\r\n\r\nexport const getData = (state: RootState) => state.code.data;\r\n\r\nexport const getDrawer = (state: RootState) => state.code.drawer;\r\n\r\nexport const getText = (state: RootState) => state.code.text;\r\n\r\nexport default codeSlice.reducer;\r\n","export class TreeNode {\r\n  type: string;\r\n  index: number;\r\n  value: string;\r\n  left: TreeNode | null;\r\n  right: TreeNode | null;\r\n  args: TreeNode[];\r\n  arbitrary_args: boolean;\r\n  user_input: boolean;\r\n  static count: number = 0;\r\n\r\n  constructor(index: number = 0, type: string = \"OPERAND\") {\r\n    this.index = index;\r\n    this.type = type;\r\n    this.value = \"\";\r\n    this.left = null;\r\n    this.right = null;\r\n    this.args = [];\r\n    this.user_input = false;\r\n    this.arbitrary_args = false;\r\n  }\r\n\r\n  setValue(value: string) {\r\n    this.value = value;\r\n  }\r\n\r\n  addArguments(quantity: number) {\r\n    while (quantity > 0) {\r\n      TreeNode.count++;\r\n      this.args.push(new TreeNode(TreeNode.count));\r\n      quantity--;\r\n    }\r\n  }\r\n\r\n  setLeft() {\r\n    TreeNode.count++;\r\n    this.left = new TreeNode(TreeNode.count);\r\n  }\r\n\r\n  setRight() {\r\n    TreeNode.count++;\r\n    this.right = new TreeNode(TreeNode.count);\r\n  }\r\n\r\n  setArgs(arbitrary_args: boolean, args_len: number) {\r\n    TreeNode.count++;\r\n    this.right = new TreeNode(TreeNode.count, \"ARGS\");\r\n    this.right.arbitrary_args = arbitrary_args;\r\n    if (args_len) this.right.addArguments(args_len);\r\n  }\r\n}\r\nclass Tree {\r\n  root: TreeNode = new TreeNode();\r\n\r\n  find(index: number) {\r\n    if (this.root.index === index) {\r\n      return this.root;\r\n    } else if (this.root.type === \"OPERAND\" || this.root.type === \"OPERATOR\")\r\n      return (\r\n        this._find(this.root.left, index) || this._find(this.root.right, index)\r\n      );\r\n    else if (this.root.type === \"FUNCTION\")\r\n      return (\r\n        this._find(this.root.args[0], index) ||\r\n        this._find(this.root.args[1], index) ||\r\n        this._find(this.root.args[2], index) ||\r\n        this._find(this.root.args[3], index) ||\r\n        this._find(this.root.args[4], index) ||\r\n        this._find(this.root.args[5], index) ||\r\n        this._find(this.root.args[6], index) ||\r\n        this._find(this.root.args[7], index) ||\r\n        this._find(this.root.args[8], index) ||\r\n        this._find(this.root.args[9], index)\r\n      );\r\n    else return null;\r\n  }\r\n\r\n  _find(node: TreeNode | null, index: number): any {\r\n    if (node) {\r\n      if (node.index === index) return node;\r\n      else if (node.type === \"OPERAND\" || node.type === \"OPERATOR\")\r\n        return this._find(node.left, index) || this._find(node.right, index);\r\n      else if (node.type === \"FUNCTION\" || node.type === \"ARGS\")\r\n        return (\r\n          this._find(node.args[0], index) ||\r\n          this._find(node.args[1], index) ||\r\n          this._find(node.args[2], index) ||\r\n          this._find(node.args[3], index) ||\r\n          this._find(node.args[4], index) ||\r\n          this._find(node.args[5], index) ||\r\n          this._find(node.args[6], index) ||\r\n          this._find(node.args[7], index) ||\r\n          this._find(node.args[8], index) ||\r\n          this._find(node.args[9], index)\r\n        );\r\n      else return null;\r\n    }\r\n  }\r\n\r\n  delete(index: number) {\r\n    if (this.root.index === index) this.root = new TreeNode();\r\n    else if (this.root.left && this.root.left.index === index)\r\n      this.root.left = new TreeNode(this.root.left.index);\r\n    else if (this.root.right && this.root.right.index === index)\r\n      this.root.right = new TreeNode(this.root.right.index);\r\n    else if (this.root.type === \"FUNCTION\") {\r\n      for (let i = 0; i < this.root.args.length; i++) {\r\n        if (this.root.args[i].index === index)\r\n          this.root.args[i] = new TreeNode(this.root.args[i].index);\r\n      }\r\n      return (\r\n        this._delete(this.root.args[0], index) ||\r\n        this._delete(this.root.args[1], index) ||\r\n        this._delete(this.root.args[2], index) ||\r\n        this._delete(this.root.args[3], index) ||\r\n        this._delete(this.root.args[4], index) ||\r\n        this._delete(this.root.args[5], index) ||\r\n        this._delete(this.root.args[6], index) ||\r\n        this._delete(this.root.args[7], index) ||\r\n        this._delete(this.root.args[8], index) ||\r\n        this._delete(this.root.args[9], index)\r\n      );\r\n    } else\r\n      return (\r\n        this._delete(this.root.left, index) ||\r\n        this._delete(this.root.right, index)\r\n      );\r\n  }\r\n\r\n  _delete(node: TreeNode | null, index: number): any {\r\n    if (node) {\r\n      if (node.index === index) node = new TreeNode(node.index);\r\n      else if (node.left && node.left.index === index)\r\n        node.left = new TreeNode(node.left.index);\r\n      else if (node.right && node.right.index === index)\r\n        node.right = new TreeNode(node.right.index);\r\n      else if (node.type === \"FUNCTION\" || node.type === \"ARGS\") {\r\n        for (let i = 0; i < node.args.length; i++) {\r\n          if (node.args[i].index === index)\r\n            node.args[i] = new TreeNode(node.args[i].index);\r\n        }\r\n        return (\r\n          this._delete(node.args[0], index) ||\r\n          this._delete(node.args[1], index) ||\r\n          this._delete(node.args[2], index) ||\r\n          this._delete(node.args[3], index) ||\r\n          this._delete(node.args[4], index) ||\r\n          this._delete(node.args[5], index) ||\r\n          this._delete(node.args[6], index) ||\r\n          this._delete(node.args[7], index) ||\r\n          this._delete(node.args[8], index) ||\r\n          this._delete(node.args[9], index)\r\n        );\r\n      } else\r\n        return (\r\n          this._delete(node.left, index) || this._delete(node.right, index)\r\n        );\r\n    }\r\n  }\r\n\r\n  swap_with_left(index: number) {\r\n    const node = this.find(index);\r\n    const child = node.left;\r\n    if (node) {\r\n      if (\r\n        node.type !== \"OPERATOR\" ||\r\n        child.type !== \"OPERATOR\" ||\r\n        child.value === \"in\"\r\n      )\r\n        return false;\r\n      else {\r\n        [node.value, child.value] = [child.value, node.value];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  swap_with_right(index: number) {\r\n    const node = this.find(index);\r\n    const child = node.right;\r\n    if (node) {\r\n      if (\r\n        node.type !== \"OPERATOR\" ||\r\n        child.type !== \"OPERATOR\" ||\r\n        child.value === \"in\"\r\n      )\r\n        return false;\r\n      else {\r\n        [node.value, child.value] = [child.value, node.value];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default new Tree();\r\n","import { TextField, Button, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { updateTree, getCurrentIndex, setCode } from \"../../store/codeSlice\";\r\nimport Tree from \"../../Tree\";\r\n\r\ntype Props = {\r\n  setNode: any;\r\n};\r\n\r\nexport const UserInput: React.FC<Props> = ({ setNode }) => {\r\n  const dispatch = useAppDispatch();\r\n  const index = useAppSelector(getCurrentIndex);\r\n  const node = Tree.find(index);\r\n  const [value, setValue] = React.useState(node.user_input ? node.value : \"\");\r\n\r\n  const handleClick = () => {\r\n    dispatch(setCode(value));\r\n    node.type = \"OPERAND\";\r\n    node.left = null;\r\n    node.right = null;\r\n    node.user_input = true;\r\n    node.value = value;\r\n    dispatch(updateTree());\r\n    setNode(node);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" padding={1} maxWidth={\"300px\"}>\r\n      <TextField\r\n        style={{ alignSelf: \"center\", flexGrow: 1 }}\r\n        placeholder=\"Пользовательский ввод\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n      />\r\n      <Button onClick={handleClick}>Ok</Button>\r\n    </Box>\r\n  );\r\n};\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { setCode, getCurrentIndex, updateTree } from \"../../store/codeSlice\";\r\nimport Tree from \"../../Tree\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ntype Item = {\r\n  name: string;\r\n  arbitrary_args?: boolean;\r\n  is_operator?: boolean;\r\n  arguments_types?: string[];\r\n};\r\n\r\ntype Props = {\r\n  type: string;\r\n  items: Item[];\r\n};\r\n\r\nexport const CustomList: React.FC<Props> = ({ items, type }) => {\r\n  const dispatch = useAppDispatch();\r\n  const index_in_tree = useAppSelector(getCurrentIndex);\r\n  const classes = useStyles();\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleListItemClick = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    index: number,\r\n    value: string\r\n  ) => {\r\n    setSelectedIndex(index);\r\n    dispatch(setCode(value));\r\n    const node = Tree.find(index_in_tree);\r\n\r\n    if (node) {\r\n      node.value = value;\r\n      node.type = items[index].is_operator\r\n        ? \"OPERATOR\"\r\n        : type === \"functions\"\r\n        ? \"FUNCTION\"\r\n        : \"OPERAND\";\r\n      node.left = null;\r\n      node.right = null;\r\n      node.user_input = false;\r\n\r\n      if (items[index].is_operator) {\r\n        node.setLeft();\r\n        node.setArgs(\r\n          items[index].arbitrary_args,\r\n          items[index].arguments_types!.length\r\n        );\r\n      }\r\n\r\n      if (type === \"functions\" && !items[index].is_operator) {\r\n        if (node.args.length !== items[index].arguments_types!.length) {\r\n          node.args = [];\r\n          node.addArguments(items[index].arguments_types!.length);\r\n          node.arbitrary_args = items[index].arbitrary_args;\r\n        }\r\n      }\r\n      dispatch(updateTree());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\">\r\n        {items.map((item: Item, ind: number) => (\r\n          <ListItem\r\n            key={ind}\r\n            button\r\n            selected={selectedIndex === ind}\r\n            onClick={(event) => handleListItemClick(event, ind, item.name)}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={item.name} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n","export const mapping_list_types = new Map();\r\nmapping_list_types.set(\"functions\", \"Функции\");\r\nmapping_list_types.set(\"variables\", \"Переменные\");\r\nmapping_list_types.set(\"facts\", \"Факты\");\r\nmapping_list_types.set(\"measures\", \"Меры\");\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  text: {\r\n    width: \"90%\",\r\n    margin: 10,\r\n    marginTop: 0,\r\n  },\r\n  wrapper: {\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  box: {\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n    width: \"100%\",\r\n    maxHeight: 300,\r\n  },\r\n}));\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { CustomList } from \"../List\";\r\nimport { mapping_list_types } from \"./mapping\";\r\nimport { useStyles } from \"./styles\";\r\nimport { getData } from \"../../store/codeSlice\";\r\nimport { useAppSelector } from \"../../hooks\";\r\n\r\ntype Item = {\r\n  name: string;\r\n  arbitrary_args?: boolean;\r\n  type?: string;\r\n  arguments_types?: string[];\r\n};\r\n\r\nexport const Wrapper: React.FC<{ type: string }> = ({ type }) => {\r\n  const data = useAppSelector(getData);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filtered, setFiltered] = useState<Item[]>(\r\n    data[type.toUpperCase() as keyof typeof data]\r\n  );\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setFiltered(() =>\r\n      data[type.toUpperCase() as keyof typeof data].filter((item) =>\r\n        item.name.includes(search)\r\n      )\r\n    );\r\n  }, [search]);\r\n\r\n  return (\r\n    <Box className={classes.wrapper}>\r\n      <TextField\r\n        label={mapping_list_types.get(type)}\r\n        className={classes.text}\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      <Box className={classes.box}>\r\n        <CustomList items={filtered} type={type} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => {\r\n  return {\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: \"auto\",\r\n    },\r\n    btn: {\r\n      margin: 5,\r\n    },\r\n  };\r\n});\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles<Theme, { text: boolean }>((theme) => ({\r\n  mathIcon: {\r\n    \"&:before\": {\r\n      fontFamily: \"MathIcon\",\r\n      fontSize: ({ text }) => (text ? 10 : \"0.875rem\"),\r\n    },\r\n  },\r\n  eq: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f122\"',\r\n    },\r\n  },\r\n  ne: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f140\"',\r\n    },\r\n  },\r\n  gt: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f138\"',\r\n    },\r\n  },\r\n  gte: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f137\"',\r\n    },\r\n  },\r\n  lt: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f13a\"',\r\n    },\r\n  },\r\n  lte: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f13b\"',\r\n    },\r\n  },\r\n  plus: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f165\"',\r\n    },\r\n  },\r\n  mult: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f150\"',\r\n    },\r\n  },\r\n  or: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f142\"',\r\n    },\r\n  },\r\n  minus: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f14f\"',\r\n    },\r\n  },\r\n  in: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f134\"',\r\n    },\r\n  },\r\n  braces: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f15e\"',\r\n    },\r\n  },\r\n  union: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f17e\"',\r\n    },\r\n  },\r\n  divide: {\r\n    \"&:before\": {\r\n      content: '\"\\\\f169\"',\r\n    },\r\n  },\r\n}));\r\n","import useStyles from \"./styles\";\r\nimport cn from \"classnames\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { getText } from \"../../store/codeSlice\";\r\nimport { useAppSelector } from \"../../hooks\";\r\n\r\ntype Props = {\r\n  value: string;\r\n};\r\n\r\nexport const CustomIcon: React.FC<Props> = ({ value }) => {\r\n  const text = useAppSelector(getText);\r\n  const classes = useStyles({ text });\r\n  const getIcon = (value: string) => {\r\n    switch (value) {\r\n      case \"+\":\r\n        return <Box className={cn(classes.mathIcon, classes.plus)}></Box>;\r\n      case \"-\":\r\n        return <Box className={cn(classes.mathIcon, classes.minus)}></Box>;\r\n      case \"<\":\r\n        return <Box className={cn(classes.mathIcon, classes.lt)}></Box>;\r\n      case \"<=\":\r\n        return <Box className={cn(classes.mathIcon, classes.lte)}></Box>;\r\n      case \">\":\r\n        return <Box className={cn(classes.mathIcon, classes.gt)}></Box>;\r\n      case \">=\":\r\n        return <Box className={cn(classes.mathIcon, classes.gte)}></Box>;\r\n      case \"!=\":\r\n        return <Box className={cn(classes.mathIcon, classes.ne)}></Box>;\r\n      case \"==\":\r\n        return <Box className={cn(classes.mathIcon, classes.eq)}></Box>;\r\n      case \"*\":\r\n        return <Box className={cn(classes.mathIcon, classes.mult)}></Box>;\r\n      case \"/\":\r\n        return <Box className={cn(classes.mathIcon, classes.divide)}></Box>;\r\n      default:\r\n        return value;\r\n    }\r\n  };\r\n\r\n  return <>{getIcon(value)}</>;\r\n};\r\n","import Box from \"@material-ui/core/Box\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { setCode, updateTree, getData } from \"../../store/codeSlice\";\r\nimport { CustomIcon } from \"../CustomIcon\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n  setNode: any;\r\n};\r\n\r\nexport const CustomButtons: React.FC<Props> = ({ node, setNode }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const data = useAppSelector(getData);\r\n  const operators = data[\"OPERATORS\"];\r\n\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"flex-start\" flexWrap=\"wrap\">\r\n      {operators.map((operator) => (\r\n        <Button\r\n          className={classes.btn}\r\n          onClick={() => {\r\n            dispatch(setCode(operator.name));\r\n            if (node) {\r\n              node.value = operator.name;\r\n              node.type = \"OPERATOR\";\r\n              if (node.right && node.right.type === \"ARGS\")\r\n                node.right = new TreeNode(node.right.index);\r\n              node.user_input = false;\r\n              if (!node.left) node.setLeft();\r\n              if (!node.right) node.setRight();\r\n            }\r\n            dispatch(updateTree());\r\n          }}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        >\r\n          <CustomIcon value={operator.name} />\r\n        </Button>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { UserInput } from \"../UserInput\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { Wrapper } from \"../Wrapper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { CustomButtons } from \"../CustomButtons\";\r\nimport Tree, { TreeNode } from \"../../Tree\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { setCurrentIndex, updateTree, getCode } from \"../../store/codeSlice\";\r\nimport SyncAltIcon from \"@material-ui/icons/SyncAlt\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { CustomIcon } from \"../CustomIcon\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nexport const CustomPopover: React.FC<{ index: number; value: string }> = ({\r\n  index,\r\n  value,\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const [node, setNode] = React.useState<TreeNode>(Tree.find(index));\r\n  const [show, setShow] = React.useState<boolean>(false);\r\n  const [show_delete, setShowDelete] = React.useState(false);\r\n  const [type, setType] = React.useState<string | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const code = useAppSelector(getCode);\r\n\r\n  useEffect(() => {\r\n    setAnchorEl(null);\r\n    setOpen(false);\r\n  }, [code]);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen(true);\r\n    dispatch(setCurrentIndex(index));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListItemClick = (_type: string) => {\r\n    setShow(true);\r\n    setType(_type);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShow(false);\r\n    setType(null);\r\n  };\r\n\r\n  const getComponent = () => {\r\n    switch (type) {\r\n      case \"functions\":\r\n        return <Wrapper type=\"functions\" />;\r\n      case \"variables\":\r\n        return <Wrapper type=\"variables\" />;\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Tree.delete(index);\r\n    node.user_input = false;\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  const handleSwapLeft = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Tree.swap_with_left(index);\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  const handleSwapRight = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Tree.swap_with_right(index);\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  // const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      {value ? (\r\n        <Button\r\n          onClick={handleClick}\r\n          disableRipple={true}\r\n          style={{ position: \"relative\" }}\r\n          onMouseEnter={() => setShowDelete(true)}\r\n          onMouseLeave={() => setShowDelete(false)}\r\n        >\r\n          {node.user_input && isNaN(parseInt(value)) ? (\r\n            <Box color=\"red\">\"{value}\"</Box>\r\n          ) : (\r\n            <CustomIcon value={value} />\r\n          )}\r\n          {show_delete && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={handleDelete}\r\n              style={{ position: \"absolute\", top: -5, right: -5 }}\r\n            >\r\n              <ClearIcon style={{ fontSize: 15 }} />\r\n            </IconButton>\r\n          )}\r\n          {show_delete && node.left && node.left.type === \"OPERATOR\" && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={handleSwapLeft}\r\n              style={{ position: \"absolute\", top: 7, left: -5 }}\r\n            >\r\n              <SyncAltIcon style={{ fontSize: 15 }} />\r\n            </IconButton>\r\n          )}\r\n          {show_delete && node.right && node.right.type === \"OPERATOR\" && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={handleSwapRight}\r\n              style={{ position: \"absolute\", top: 7, right: -5 }}\r\n            >\r\n              <SyncAltIcon style={{ fontSize: 15 }} />\r\n            </IconButton>\r\n          )}\r\n        </Button>\r\n      ) : (\r\n        <IconButton onClick={handleClick}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      )}\r\n      {open && (\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Box position=\"relative\" maxWidth=\"300px\">\r\n            <UserInput setNode={setNode} />\r\n            <CustomButtons node={node} setNode={setNode} />\r\n            <List component=\"nav\">\r\n              <ListItem\r\n                key={0}\r\n                button\r\n                onClick={() => handleListItemClick(\"variables\")}\r\n              >\r\n                <ListItemText primary={\"Переменные\"} />\r\n                <ListItemIcon style={{ minWidth: 0 }}>\r\n                  <ArrowForwardIosIcon />\r\n                </ListItemIcon>\r\n              </ListItem>\r\n\r\n              <ListItem\r\n                key={3}\r\n                button\r\n                onClick={() => handleListItemClick(\"functions\")}\r\n              >\r\n                <ListItemText primary={\"Функции\"} />\r\n                <ListItemIcon style={{ minWidth: 0 }}>\r\n                  <ArrowForwardIosIcon />\r\n                </ListItemIcon>\r\n              </ListItem>\r\n            </List>\r\n            {show && (\r\n              <Box\r\n                position=\"absolute\"\r\n                left=\"0px\"\r\n                top=\"0px\"\r\n                width=\"100%\"\r\n                overflow=\"hidden\"\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                height=\"100%\"\r\n                bgcolor=\"white\"\r\n              >\r\n                <IconButton\r\n                  onClick={handleCancel}\r\n                  style={{\r\n                    marginTop: 10,\r\n                    marginLeft: 10,\r\n                    alignSelf: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <ArrowBackIosIcon />\r\n                </IconButton>\r\n                {getComponent()}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Popover>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Wrapper } from \"../Wrapper\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { setCurrentIndex, updateTree, getCode } from \"../../store/codeSlice\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tree from \"../../Tree\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport SyncAltIcon from \"@material-ui/icons/SyncAlt\";\r\nimport { CustomButtons } from \"../CustomButtons\";\r\nimport { CustomIcon } from \"../CustomIcon\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { UserInput } from \"../UserInput\";\r\n\r\nexport const TemporaryDrawer: React.FC<{\r\n  index: number;\r\n  value?: string;\r\n}> = ({ index, value }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [state, setState] = React.useState(false);\r\n  const [show_delete, setShowDelete] = React.useState(false);\r\n  const [node, setNode] = React.useState(Tree.find(index));\r\n  const code = useAppSelector(getCode);\r\n\r\n  useEffect(() => {\r\n    setState(false);\r\n  }, [code]);\r\n\r\n  const toggleDrawer =\r\n    (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n          (event as React.KeyboardEvent).key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (open) dispatch(setCurrentIndex(index));\r\n      setState(open);\r\n    };\r\n\r\n  const handleDelete = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Tree.delete(index);\r\n    node.user_input = false;\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  const handleSwapLeft = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Tree.swap_with_left(index);\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  const handleSwapRight = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Tree.swap_with_right(index);\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  const list = () => (\r\n    <Box display=\"flex\">\r\n      <Wrapper type=\"functions\" />\r\n      <Wrapper type=\"variables\" />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {value ? (\r\n        <Button\r\n          onClick={toggleDrawer(true)}\r\n          disableRipple={true}\r\n          style={{ position: \"relative\" }}\r\n          onMouseEnter={() => setShowDelete(true)}\r\n          onMouseLeave={() => setShowDelete(false)}\r\n        >\r\n          {node.user_input && isNaN(parseInt(value)) ? (\r\n            <Box color=\"red\">\"{value}\"</Box>\r\n          ) : (\r\n            <CustomIcon value={value} />\r\n          )}\r\n          {show_delete && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={handleDelete}\r\n              style={{ position: \"absolute\", top: -5, right: -5 }}\r\n            >\r\n              <ClearIcon style={{ fontSize: 15 }} />\r\n            </IconButton>\r\n          )}\r\n          {show_delete && node.left && node.left.type === \"OPERATOR\" && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={handleSwapLeft}\r\n              style={{ position: \"absolute\", top: 7, left: -5 }}\r\n            >\r\n              <SyncAltIcon style={{ fontSize: 15 }} />\r\n            </IconButton>\r\n          )}\r\n          {show_delete && node.right && node.right.type === \"OPERATOR\" && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={handleSwapRight}\r\n              style={{ position: \"absolute\", top: 7, right: -5 }}\r\n            >\r\n              <SyncAltIcon style={{ fontSize: 15 }} />\r\n            </IconButton>\r\n          )}\r\n        </Button>\r\n      ) : (\r\n        <IconButton onClick={toggleDrawer(true)}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      )}\r\n\r\n      <Drawer anchor={\"bottom\"} open={state} onClose={toggleDrawer(false)}>\r\n        <UserInput setNode={setNode} />\r\n        <CustomButtons node={node} setNode={setNode} />\r\n        {list()}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n","import { CustomPopover } from \"../CustomPopover\";\r\nimport { TemporaryDrawer } from \"../Drawer\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { getDrawer } from \"../../store/codeSlice\";\r\n\r\nexport const Switcher: React.FC<{ index: number; value: string }> = ({\r\n  index,\r\n  value,\r\n}) => {\r\n  const drawer = useAppSelector(getDrawer);\r\n\r\n  return drawer ? (\r\n    <TemporaryDrawer index={index} value={value} />\r\n  ) : (\r\n    <CustomPopover index={index} value={value} />\r\n  );\r\n};\r\n","import { Switcher } from \"../Switcher\";\r\n\r\ntype Props = {\r\n  value?: string;\r\n  index?: number;\r\n};\r\n\r\nexport const Leaf: React.FC<Props> = ({ value = \"\", index }) => {\r\n  return <Switcher index={index || 0} value={value} />;\r\n};\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles<Theme, { state: boolean; brace: boolean }>({\r\n  box: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: ({ state }) => (state ? \"column\" : \"row\"),\r\n    cursor: \"pointer\",\r\n    borderLeft: ({ brace }) => (brace ? \"2px solid black\" : \"none\"),\r\n    borderRight: ({ brace }) => (brace ? \"2px solid black\" : \"none\"),\r\n    margin: 5,\r\n    padding: 5,\r\n    position: \"relative\",\r\n    borderRadius: 10,\r\n  },\r\n  mid: {\r\n    margin: 15,\r\n    fontSize: 25,\r\n  },\r\n  btn: {\r\n    position: \"absolute\",\r\n    top: -18,\r\n    right: -12,\r\n  },\r\n  icon: {\r\n    fontSize: 15,\r\n  },\r\n});\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles<Theme, { state: boolean }>({\r\n  box: {\r\n    cursor: \"pointer\",\r\n    margin: 5,\r\n    padding: 5,\r\n    borderLeft: ({ state }) => (state ? \"2px solid black\" : \"none\"),\r\n    borderRight: ({ state }) => (state ? \"2px solid black\" : \"none\"),\r\n    flexDirection: ({ state }) => (state ? \"column\" : \"row\"),\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    borderRadius: 10,\r\n  },\r\n  typography: {\r\n    margin: 5,\r\n    fontSize: 25,\r\n  },\r\n  mid: {\r\n    padding: 15,\r\n    fontSize: 25,\r\n  },\r\n});\r\n","import { Func } from \"./\";\r\nimport { Node } from \"../Node\";\r\nimport { Leaf } from \"../Leaf\";\r\nimport { TreeNode } from \"../../Tree\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const ComponentSelector: React.FC<Props> = ({ node }) => {\r\n  switch (node.type) {\r\n    case \"FUNCTION\":\r\n      return <Func node={node} />;\r\n    case \"OPERATOR\":\r\n      return <Node node={node} />;\r\n    default:\r\n      return (\r\n        <Leaf\r\n          value={node.value ? node.value : \"\"}\r\n          index={node.index ? node.index : 0}\r\n        />\r\n      );\r\n  }\r\n};\r\n","import { Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport { useState } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { updateTree } from \"../../store/codeSlice\";\r\nimport { Switcher } from \"../Switcher\";\r\nimport { ComponentSelector } from \"./ComponentSelector\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const Func: React.FC<Props> = ({ node }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [state, setState] = useState<boolean>(false);\r\n  const [show, setShow] = useState(false);\r\n  const classes = useStyles({ state });\r\n  const handleClick = () => setState(!state);\r\n\r\n  const handleAddClick = () => {\r\n    node.addArguments(1);\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      onMouseEnter={() => setShow(true)}\r\n      onMouseLeave={() => setShow(false)}\r\n    >\r\n      <Switcher index={node.index} value={node.value} />\r\n      {!state && <Typography className={classes.typography}>(</Typography>}\r\n      <Box className={classes.box}>\r\n        {node.args &&\r\n          node.args.map((arg: TreeNode, i: number) => {\r\n            return i === node.args.length - 1 ? (\r\n              <ComponentSelector node={arg} />\r\n            ) : (\r\n              <>\r\n                <ComponentSelector node={arg} />\r\n                <Typography className={classes.mid} onClick={handleClick}>\r\n                  ,\r\n                </Typography>\r\n              </>\r\n            );\r\n          })}\r\n        {node.arbitrary_args && show && node.args.length < 10 && (\r\n          <IconButton size=\"small\" onClick={handleAddClick}>\r\n            <AddIcon style={{ fontSize: 15 }} />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n\r\n      {!state && <Typography className={classes.typography}>)</Typography>}\r\n    </Box>\r\n  );\r\n};\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles<Theme, { state: boolean }>({\r\n  box: {\r\n    cursor: \"pointer\",\r\n    margin: 5,\r\n    padding: 5,\r\n    borderLeft: ({ state }) => (state ? \"2px solid black\" : \"none\"),\r\n    borderRight: ({ state }) => (state ? \"2px solid black\" : \"none\"),\r\n    flexDirection: ({ state }) => (state ? \"column\" : \"row\"),\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    borderRadius: 10,\r\n  },\r\n  typography: {\r\n    margin: 5,\r\n    fontSize: 25,\r\n  },\r\n  mid: {\r\n    padding: 15,\r\n    fontSize: 25,\r\n  },\r\n});\r\n","import { Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Leaf } from \"../Leaf\";\r\nimport { Node } from \"../Node\";\r\nimport { Func } from \"../Func\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport { useState } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { updateTree } from \"../../store/codeSlice\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const Args: React.FC<Props> = ({ node }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [state, setState] = useState<boolean>(false);\r\n  const [show, setShow] = useState(false);\r\n  const classes = useStyles({ state });\r\n  const handleClick = () => setState(!state);\r\n\r\n  const getComponent = (node: TreeNode) => {\r\n    switch (node.type) {\r\n      case \"FUNCTION\":\r\n        return <Func node={node} />;\r\n\r\n      case \"OPERATOR\":\r\n        return <Node node={node} />;\r\n      default:\r\n        return <Leaf value={node.value} index={node.index} />;\r\n    }\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    node.addArguments(1);\r\n    dispatch(updateTree());\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      onMouseEnter={() => setShow(true)}\r\n      onMouseLeave={() => setShow(false)}\r\n    >\r\n      {!state && <Typography className={classes.typography}>(</Typography>}\r\n      <Box className={classes.box}>\r\n        {node.args &&\r\n          node.args.map((arg: TreeNode, i: number) => {\r\n            return i === node.args.length - 1 ? (\r\n              getComponent(arg)\r\n            ) : (\r\n              <>\r\n                {getComponent(arg)}\r\n                <Typography className={classes.mid} onClick={handleClick}>\r\n                  ,\r\n                </Typography>\r\n              </>\r\n            );\r\n          })}\r\n        {node.arbitrary_args && show && node.args.length < 10 && (\r\n          <IconButton size=\"small\" onClick={handleAddClick}>\r\n            <AddIcon style={{ fontSize: 15 }} />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n\r\n      {!state && <Typography className={classes.typography}>)</Typography>}\r\n    </Box>\r\n  );\r\n};\r\n","import { Func } from \"../Func\";\r\nimport { Node } from \"./\";\r\nimport { Args } from \"../Args\";\r\nimport { Leaf } from \"../Leaf\";\r\nimport { TreeNode } from \"../../Tree\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const ComponentSelector: React.FC<Props> = ({ node }) => {\r\n  switch (node.type) {\r\n    case \"FUNCTION\":\r\n      return <Func node={node} />;\r\n    case \"OPERATOR\":\r\n      return <Node node={node} />;\r\n    case \"ARGS\":\r\n      return <Args node={node} />;\r\n    default:\r\n      return (\r\n        <Leaf\r\n          value={node.value ? node.value : \"\"}\r\n          index={node.index ? node.index : 0}\r\n        />\r\n      );\r\n  }\r\n};\r\n","import { Box } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { TreeNode } from \"../../Tree\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { getBrace } from \"../../store/codeSlice\";\r\nimport { useStyles } from \"./styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport { Switcher } from \"../Switcher\";\r\nimport { ComponentSelector } from \"./ComponentSelector\";\r\n\r\ntype Props = {\r\n  node: TreeNode;\r\n};\r\n\r\nexport const Node: React.FC<Props> = ({ node }) => {\r\n  const brace = useAppSelector(getBrace);\r\n  const [state, setState] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const classes = useStyles({ state, brace });\r\n\r\n  const handleClick = () => setState(!state);\r\n\r\n  return (\r\n    <Box\r\n      className={classes.box}\r\n      onMouseEnter={() => setVisible(true)}\r\n      onMouseLeave={() => setVisible(false)}\r\n    >\r\n      {visible && (\r\n        <IconButton\r\n          onClick={handleClick}\r\n          className={classes.btn}\r\n          size={\"small\"}\r\n        >\r\n          <AutorenewIcon className={classes.icon} />\r\n        </IconButton>\r\n      )}\r\n      {node.left && <ComponentSelector node={node.left} />}\r\n      <Switcher index={node.index} value={node.value} />\r\n      {node.right && <ComponentSelector node={node.right} />}\r\n    </Box>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  box: {\r\n    width: 1000,\r\n    height: 700,\r\n    border: \"1px solid black\",\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    position: \"relative\",\r\n  },\r\n}));\r\n","import Box from \"@material-ui/core/Box\";\r\nimport { Leaf } from \"../Leaf\";\r\nimport { Node } from \"../Node\";\r\nimport { Func } from \"../Func\";\r\nimport Tree, { TreeNode } from \"../../Tree\";\r\nimport { useEffect } from \"react\";\r\nimport { useAppSelector, useAppDispatch } from \"../../hooks\";\r\nimport {\r\n  getUpdateTree,\r\n  toggleDrawer,\r\n  toggleBrace,\r\n  toggleText,\r\n  getText,\r\n} from \"../../store/codeSlice\";\r\nimport { useStyles } from \"./styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\n\r\nexport const VisualBuilder = () => {\r\n  const dispatch = useAppDispatch();\r\n  const update_tree = useAppSelector(getUpdateTree);\r\n  const text = useAppSelector(getText);\r\n  const classes = useStyles();\r\n\r\n  const handleDrawer = () => dispatch(toggleDrawer());\r\n\r\n  const handleBrace = () => dispatch(toggleBrace());\r\n\r\n  const handleText = () => dispatch(toggleText());\r\n\r\n  useEffect(() => {\r\n    traversTree(Tree.root);\r\n  }, [update_tree]);\r\n\r\n  const traversTree = (node: TreeNode) => {\r\n    if (node.type === \"OPERAND\")\r\n      return <Leaf value={node.value} index={node.index} />;\r\n    else if (node.type === \"FUNCTION\") return <Func node={node} />;\r\n    else return <Node node={node} />;\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.box}>\r\n      <Box position=\"absolute\" right=\"0\" display=\"flex\" flexDirection=\"column\">\r\n        <IconButton onClick={handleDrawer}>\r\n          <SettingsIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleBrace}>()</IconButton>\r\n        <IconButton onClick={handleText}>\r\n          <SubjectIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Box\r\n        margin={text ? \"unset\" : \"auto\"}\r\n        width={text ? \"100%\" : \"unset\"}\r\n        display={text ? \"flex\" : \"unset\"}\r\n        flexWrap={text ? \"wrap\" : \"unset\"}\r\n        alignItems=\"flex-start\"\r\n      >\r\n        {traversTree(Tree.root)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","export const DATA = {\r\n  VARIABLES: [\r\n    { name: \"DISTANCE\", type: \"number\" },\r\n    { name: \"LENGHT\", type: \"number\" },\r\n    { name: \"HEIGHT\", type: \"number\" },\r\n    { name: \"WEIGHT\", type: \"number\" },\r\n    { name: \"LATITUDE\", type: \"number\" },\r\n    { name: \"REPLICAS\", type: \"number\" },\r\n    { name: \"CODE_GENDER\", type: \"string\" },\r\n    { name: \"AMT_ANNUITY\", type: \"number\" },\r\n    { name: \"CNT_FAM_MEMBERS\", type: \"string\" },\r\n  ],\r\n  OPERATORS: [\r\n    {\r\n      name: \"and\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"boolean\", \"boolean\"],\r\n    },\r\n    {\r\n      name: \"or\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"boolean\", \"boolean\"],\r\n    },\r\n    {\r\n      name: \"+\",\r\n      return_type: \"Number\",\r\n      arguments_types: [\"Number\", \"Number\"],\r\n    },\r\n    {\r\n      name: \"-\",\r\n      return_type: \"Number\",\r\n      arguments_types: [\"Number\", \"Number\"],\r\n    },\r\n    {\r\n      name: \"*\",\r\n      return_type: \"Number\",\r\n      arguments_types: [\"Number\", \"Number\"],\r\n    },\r\n    {\r\n      name: \"/\",\r\n      return_type: \"Number\",\r\n      arguments_types: [\"Number\", \"Number\"],\r\n    },\r\n    {\r\n      name: \"<\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \"<=\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \"==\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \"!=\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \">\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \">=\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\", \"any\"],\r\n    },\r\n    {\r\n      name: \"like\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"string\", \"string\"],\r\n    },\r\n    {\r\n      name: \"ilike\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"string\", \"string\"],\r\n    },\r\n  ],\r\n  FUNCTIONS: [\r\n    { name: \"curent_date\", return_type: \"datetime\", arguments_types: [] },\r\n    { name: \"current_time\", return_type: \"datetime\", arguments_types: [] },\r\n    { name: \"current_timestamp\", return_type: \"number\", arguments_types: [] },\r\n    { name: \"now\", return_type: \"datetime\", arguments_types: [] },\r\n    {\r\n      name: \"concat\",\r\n      arbitrary_args: true,\r\n      return_type: \"string\",\r\n      arguments_types: [\"string\"],\r\n    },\r\n    {\r\n      name: \"cahr_length\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"string\"],\r\n    },\r\n    { name: \"random\", return_type: \"number\", arguments_types: [] },\r\n    {\r\n      name: \"coalesce\",\r\n      arbitrary_args: true,\r\n      return_type: \"any\",\r\n      arguments_types: [\"any\"],\r\n    },\r\n    {\r\n      name: \"in\",\r\n      is_operator: true,\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\"],\r\n      arbitrary_args: true,\r\n    },\r\n    {\r\n      name: \"between\",\r\n      is_operator: true,\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"number\", \"number\"],\r\n      arbitrary_args: false,\r\n    },\r\n    {\r\n      name: \"not_in\",\r\n      is_operator: true,\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\"],\r\n      arbitrary_args: true,\r\n    },\r\n    {\r\n      name: \"startwith\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"string\"],\r\n    },\r\n    {\r\n      name: \"endwith\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"string\"],\r\n    },\r\n    {\r\n      name: \"contains\",\r\n      is_operator: true,\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"any\"],\r\n    },\r\n    {\r\n      name: \"not\",\r\n      return_type: \"boolean\",\r\n      arguments_types: [\"boolean\"],\r\n    },\r\n    {\r\n      name: \"power\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\", \"number\"],\r\n    },\r\n    {\r\n      name: \"ln\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n    },\r\n    {\r\n      name: \"exp\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n    },\r\n    {\r\n      name: \"sqrt\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n    },\r\n    {\r\n      name: \"abs\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n    },\r\n    {\r\n      name: \"ceil\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n    },\r\n    {\r\n      name: \"floor\",\r\n      return_type: \"number\",\r\n      arguments_types: [\"number\"],\r\n    },\r\n  ],\r\n};\r\n","import { VisualBuilder } from \"../VisualBuilder\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useEffect } from \"react\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { setData } from \"../../store/codeSlice\";\r\nimport { DATA } from \"../../data\";\r\n\r\nexport const App = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setData(DATA));\r\n  }, []);\r\n\r\n  return (\r\n    <Box display=\"flex\" height=\"100vh\" width=\"100%\">\r\n      <VisualBuilder />\r\n    </Box>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport codeReducer from \"./codeSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    code: codeReducer,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}