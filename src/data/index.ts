export const DATA = {
  VARIABLES: [
    { name: "DISTANCE", type: "number", group: "number" },
    { name: "LENGHT", type: "number", group: "number" },
    { name: "HEIGHT", type: "number", group: "number" },
    { name: "WEIGHT", type: "number", group: "number" },
    { name: "LATITUDE", type: "number", group: "number" },
    { name: "REPLICAS", type: "number", group: "number" },
    { name: "CODE_GENDER", type: "string", group: "string" },
    { name: "AMT_ANNUITY", type: "number", group: "number" },
    { name: "CNT_FAM_MEMBERS", type: "string", group: "string" },
  ],
  OPERATORS: [
    {
      name: "and",
      return_type: "boolean",
      arguments_types: ["boolean", "boolean"],
    },
    {
      name: "or",
      return_type: "boolean",
      arguments_types: ["boolean", "boolean"],
    },
    {
      name: "+",
      return_type: "number",
      arguments_types: ["number", "number"],
    },
    {
      name: "-",
      return_type: "number",
      arguments_types: ["number", "number"],
    },
    {
      name: "*",
      return_type: "number",
      arguments_types: ["number", "number"],
    },
    {
      name: "/",
      return_type: "number",
      arguments_types: ["number", "number"],
    },
    {
      name: "<",
      return_type: "boolean",
      arguments_types: ["any", "any"],
    },
    {
      name: "<=",
      return_type: "boolean",
      arguments_types: ["any", "any"],
    },
    {
      name: "==",
      return_type: "boolean",
      arguments_types: ["any", "any"],
    },
    {
      name: "!=",
      return_type: "boolean",
      arguments_types: ["any", "any"],
    },
    {
      name: ">",
      return_type: "boolean",
      arguments_types: ["any", "any"],
    },
    {
      name: ">=",
      return_type: "boolean",
      arguments_types: ["any", "any"],
    },
    {
      name: "like",
      return_type: "boolean",
      arguments_types: ["string", "string"],
    },
    {
      name: "ilike",
      return_type: "boolean",
      arguments_types: ["string", "string"],
    },
    {
      name: "contains",
      return_type: "boolean",
      arguments_types: ["string", "string"],
    },
  ],
  FUNCTIONS: [
    {
      name: "curent_date",
      return_type: "datetime",
      arguments_types: [],
      group: "datetime",
    },
    {
      name: "current_time",
      return_type: "datetime",
      arguments_types: [],
      group: "datetime",
    },
    {
      name: "current_timestamp",
      return_type: "number",
      arguments_types: [],
      group: "number",
    },
    {
      name: "now",
      return_type: "datetime",
      arguments_types: [],
      group: "datetime",
    },
    {
      name: "concat",
      arbitrary_args: true,
      return_type: "string",
      arguments_types: ["string"],
      group: "string",
    },
    {
      name: "cahr_length",
      return_type: "number",
      arguments_types: ["string"],
      group: "number",
    },
    {
      name: "random",
      return_type: "number",
      arguments_types: [],
      group: "number",
    },
    {
      name: "coalesce",
      arbitrary_args: true,
      return_type: "any",
      arguments_types: ["any"],
      group: "any",
    },
    {
      name: "in",
      is_operator: true,
      return_type: "boolean",
      arguments_types: ["any"],
      arbitrary_args: true,
      group: "boolean",
    },
    {
      name: "between",
      is_operator: true,
      return_type: "boolean",
      arguments_types: ["number", "number"],
      arbitrary_args: false,
      group: "boolean",
    },
    {
      name: "not_in",
      is_operator: true,
      return_type: "boolean",
      arguments_types: ["any"],
      arbitrary_args: true,
      group: "boolean",
    },
    {
      name: "startwith",
      return_type: "boolean",
      arguments_types: ["string"],
      group: "boolean",
    },
    {
      name: "endwith",
      return_type: "boolean",
      arguments_types: ["string"],
      group: "boolean",
    },
    {
      name: "not",
      return_type: "boolean",
      arguments_types: ["boolean"],
      group: "boolean",
    },
    {
      name: "power",
      return_type: "number",
      arguments_types: ["number", "number"],
      group: "number",
    },
    {
      name: "ln",
      return_type: "number",
      arguments_types: ["number"],
      group: "number",
    },
    {
      name: "exp",
      return_type: "number",
      arguments_types: ["number"],
      group: "number",
    },
    {
      name: "sqrt",
      return_type: "number",
      arguments_types: ["number"],
      group: "number",
    },
    {
      name: "abs",
      return_type: "number",
      arguments_types: ["number"],
      group: "number",
    },
    {
      name: "ceil",
      return_type: "number",
      arguments_types: ["number"],
      group: "number",
    },
    {
      name: "floor",
      return_type: "number",
      arguments_types: ["number"],
      group: "number",
    },
  ],
};
